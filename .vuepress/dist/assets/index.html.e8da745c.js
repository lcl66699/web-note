import{_ as t,r as e,o,c,b as n,e as l,d as s,a}from"./app.c45603b7.js";const i={},u=n("h1",{id:"\u6570\u636E\u7ED3\u6784\u4E0E\u7B97\u6CD5",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u6570\u636E\u7ED3\u6784\u4E0E\u7B97\u6CD5","aria-hidden":"true"},"#"),s(" \u6570\u636E\u7ED3\u6784\u4E0E\u7B97\u6CD5")],-1),r=n("h2",{id:"\u65F6\u95F4\u590D\u6742\u5EA6",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u65F6\u95F4\u590D\u6742\u5EA6","aria-hidden":"true"},"#"),s(" \u65F6\u95F4\u590D\u6742\u5EA6")],-1),k=n("p",null,"\u5B9A\u6027\u63CF\u8FF0\u7B97\u6CD5\u8FD0\u884C\u65F6\u95F4\uFF0C\u53D6\u590D\u6742\u5EA6\u6700\u9AD8\u7684\uFF0C\u5171\u540C\u5B8C\u6210\u4E00\u4E2A\u5FAA\u73AF\uFF0C\u662Fo1\u3002",-1),d=n("ul",null,[n("li",null,"o1 < ologn < on < Onlogn < on^2 < on^3 < o2^n < on^n\uFF01 \u8D8A\u5F80\u540E\u9762\u8D8A\u9700\u8981\u4F18\u5316")],-1),v=n("div",{class:"custom-container tip"},[n("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[n("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[n("circle",{cx:"12",cy:"12",r:"9"}),n("path",{d:"M12 8h.01"}),n("path",{d:"M11 12h1v4h1"})])]),n("p",{class:"custom-container-title"},"TIP"),n("ul",null,[n("li",null,"\u039F(1)\u8868\u793A\u57FA\u672C\u8BED\u53E5\u7684\u6267\u884C\u6B21\u6570\u662F\u4E00\u4E2A\u5E38\u6570\uFF0C\u4E00\u822C\u6765\u8BF4\uFF0C\u53EA\u8981\u7B97\u6CD5\u4E2D\u4E0D\u5B58\u5728\u5FAA\u73AF\u8BED\u53E5\uFF0C\u5176\u65F6\u95F4\u590D\u6742\u5EA6\u5C31\u662F\u039F(1)\u3002"),n("li",null,"O(logn)\u6BD4\u5982while\u5FAA\u73AF\u91CC\u9762\u64CD\u4F5C/2\u7B49\u7B49"),n("li",null,"for \u5FAA\u73AF\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(n)\u3002"),n("li",null,"for\u5D4C\u5957for\u5FAA\u73AFon^2")])],-1),m=a(`<h2 id="\u7A7A\u95F4\u590D\u6742\u5EA6" tabindex="-1"><a class="header-anchor" href="#\u7A7A\u95F4\u590D\u6742\u5EA6" aria-hidden="true">#</a> \u7A7A\u95F4\u590D\u6742\u5EA6</h2><p>\u5728\u8FD0\u884C\u8FC7\u7A0B\u4E2D\u4E34\u65F6\u5360\u7528\u5B58\u50A8\u7A7A\u95F4\u7684\u5EA6\u91CF\uFF0C\u53D6\u590D\u6742\u5EA6\u6700\u9AD8\u3002 <strong>\u8868\u793A\u7B97\u6CD5\u7684\u5B58\u50A8\u7A7A\u95F4\u548C\u6570\u636E\u89C4\u6A21\u4E4B\u95F4\u7684\u5173\u7CFB</strong></p><blockquote><p>o1 on on \u65B9 log n \u4E8C\u5206\u641C\u7D22 n log n \u6392\u5E8F on3 2n \u6B21\u65B9 \u6811</p></blockquote><blockquote><p>\u901A\u5E38\u820D\u7A7A\u95F4\u6362\u65F6\u95F4</p></blockquote><h2 id="\u6808" tabindex="-1"><a class="header-anchor" href="#\u6808" aria-hidden="true">#</a> \u6808</h2><p>\u540E\u8FDB\u5148\u51FA\u7684\u6570\u636E\u7ED3\u6784\uFF0C\u7C7B\u4F3C\u8702\u7A9D\u7164\uFF0Cjs\u53EF\u4EE5\u7528array\u5B9E\u73B0\u6808\u6240\u6709\u529F\u80FD\uFF0C\u5165\u6808push\uFF0C\u51FA\u6808pop</p><ul><li><p>\u67E5\u770B\u6808\u9876\u5143\u7D20\uFF0Cstack\uFF3Bstack-1\uFF3D</p></li><li><p>10 \u8FDB\u5236\u8F6C 2 \u8FDB\u5236</p><ul><li>\u6BD4\u5982 35\uFF0C\u7528 35 \u9664 2\uFF0C\u5F97\u5230\u5F97\u5230 17 \u7EE7\u7EED\u9664\uFF0C\u6700\u540E\u62FF\u5230\u6240\u6709\u4F59\u6570\uFF0C\u5012\u53D9\u8F93\u51FA\u5C31\u662F\u4E8C\u8FDB\u5236\u3002</li></ul></li></ul><h4 id="\u5B9E\u73B0\u6808" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0\u6808" aria-hidden="true">#</a> \u5B9E\u73B0\u6808</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Stack</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>items <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u6DFB\u52A0\u65B0\u5143\u7D20\u5230\u6808</span>
  <span class="token function">push</span><span class="token punctuation">(</span><span class="token parameter">element</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u79FB\u51FA\u6808\u9876\u5143\u7D20</span>
  <span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u83B7\u53D6\u6808\u9876\u5143\u7D20</span>
  <span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u5224\u65AD\u7A7A</span>
  <span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>items <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u961F\u5217" tabindex="-1"><a class="header-anchor" href="#\u961F\u5217" aria-hidden="true">#</a> \u961F\u5217</h2><p>queue</p><p>\u5148\u8FDB\u5148\u51FA\u7684\u6570\u636E\u7ED3\u6784\u3002</p><h2 id="\u94FE\u8868" tabindex="-1"><a class="header-anchor" href="#\u94FE\u8868" aria-hidden="true">#</a> \u94FE\u8868</h2><ul><li>[x] \u5355\u5411\u94FE\u8868\uFF1A\u591A\u4E2A\u5143\u7D20\u7EC4\u6210\u7684\u5217\u8868\uFF0C\u5143\u7D20\u5B58\u50A8\u4E0D\u8FDE\u7EED\uFF0C\u7528 next \u627E\u4E0B\u4E00\u4E2A\uFF0C\u8FDE\u5728\u4E00\u8D77\uFF0C\u76F4\u5230\u6700\u540E\u662F null\uFF08\u5355\u5411\u94FE\u8868\uFF09</li><li>\u53CC\u5411\u94FE\u8868 123 21 \u53EF\u4EE5\u5411\u524D\uFF0C\u53EF\u4EE5\u5411\u540E</li><li>\u5FAA\u73AF\u94FE\u8868 123 123 123 \u5230\u6700\u540E\u4E0D\u662F null <blockquote><p>\u5220\u9664\u94FE\u8868 1 2 3 \u76F4\u63A5 \u628A 1 \u6307\u5411 3 \u5C31\u628A 2 \u5220\u9664\u4E86</p></blockquote></li></ul><blockquote><ul><li>\u4F18\u70B9\uFF1A\u94FE\u8868\u63D2\u5165|\u5220\u9664\u5143\u7D20\u5F88\u5FEB\uFF0CO1 \u5C31\u53EF\u4EE5\u5B8C\u6210</li><li>\u7F3A\u70B9\uFF1A\u65F6\u95F4\u4E3A On\uFF0C\u6BD4\u5982\u83B7\u53D6\u7B2C 5 \u4E2A\u5143\u7D20 \u9700\u8981\u4E00\u76F4 next</li></ul></blockquote><blockquote><p>\u539F\u578B\u94FE\u672C\u8D28\u662F\u94FE\u8868\u3002\u539F\u578B\u94FE\u4E0A\u7684\u8282\u70B9\u662F\u5404\u79CD\u539F\u578B\u5BF9\u8C61\uFF0C\u6BD4\u5982 fun.pro\uFF0CObj.prototype\u3002 \u539F\u578B\u94FE\u901A\u8FC7<em>proto</em>\u5C5E\u6027\u8FDE\u63A5\u5404\u79CD\u539F\u578B\u5BF9\u8C61 obj \u7684\u539F\u578B\uFF0CObj \u539F\u578B\uFF0Cnull fun \u539F\u578B\uFF0CFun\uFF0C\u7136\u540E Obj\uFF0C\u7136\u540E null</p></blockquote><h2 id="\u96C6\u5408" tabindex="-1"><a class="header-anchor" href="#\u96C6\u5408" aria-hidden="true">#</a> \u96C6\u5408</h2><p>\u96C6\u5408\u662F\u4E00\u79CD\u65E0\u5E8F\u4E14\u552F\u4E00\u7684\u6570\u636E\u7ED3\u6784,new Set \u5BF9\u8C61\u5B58\u50A8\u7684\u503C\u603B\u662F\u552F\u4E00\u7684</p><h4 id="\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u65B9\u6CD5" aria-hidden="true">#</a> \u65B9\u6CD5</h4><ul><li>add \u6DFB\u52A0\u67D0\u4E2A\u503C\uFF0C\u8FD4\u56DE Set \u5BF9\u8C61\u672C\u8EAB\u3002</li><li>clear \u5220\u9664\u6240\u6709\u7684\u952E/\u503C\u5BF9\uFF0C\u6CA1\u6709\u8FD4\u56DE\u503C\u3002</li><li>delete \u5220\u9664\u67D0\u4E2A\u952E\uFF0C\u8FD4\u56DE true\u3002\u5982\u679C\u5220\u9664\u5931\u8D25\uFF0C\u8FD4\u56DE false\u3002</li><li>forEach \u5BF9\u6BCF\u4E2A\u5143\u7D20\u6267\u884C\u6307\u5B9A\u64CD\u4F5C\u3002</li><li>has \u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C\uFF0C\u8868\u793A\u67D0\u4E2A\u952E\u662F\u5426\u5728\u5F53\u524D Set \u5BF9\u8C61\u4E4B\u4E2D\u3002</li></ul><h4 id="\u6C42\u4EA4\u96C6" tabindex="-1"><a class="header-anchor" href="#\u6C42\u4EA4\u96C6" aria-hidden="true">#</a> \u6C42\u4EA4\u96C6</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> intersect <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>a<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {2, 3}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5B57\u5178" tabindex="-1"><a class="header-anchor" href="#\u5B57\u5178" aria-hidden="true">#</a> \u5B57\u5178</h2><p>\u5B57\u5178\u4E0E\u96C6\u5408\u7C7B\u4F3C\uFF0C\u5B57\u5178\u4E5F\u662F\u5B58\u50A8\u552F\u4E00\u503C\u7684\u6570\u636E\u7ED3\u6784\uFF0C\u4F46\u5B83\u662F\u4EE5\u952E\u503C\u5BF9\u5F62\u5F0F\u5B58\u50A8\uFF0Ces6\u7684 new Map</p><p>map \u672C\u8D28\u4E0A\u662F\u952E\u503C\u5BF9\u7684\u96C6\u5408\uFF08Hash \u7ED3\u6784\uFF09\uFF0C\u4F46\u662F\u4F20\u7EDF\u4E0A\u53EA\u80FD\u7528\u5B57\u7B26\u4E32\u5F53\u4F5C\u952E\u3002\u5B83\u7C7B\u4F3C\u4E8E\u5BF9\u8C61\uFF0C\u4E5F\u662F\u952E\u503C\u5BF9\u7684\u96C6\u5408\uFF0C\u4F46\u662F\u201C\u952E\u201D\u7684\u8303\u56F4\u4E0D\u9650\u4E8E\u5B57\u7B26\u4E32\uFF0C\u5404\u79CD\u7C7B\u578B\u7684\u503C\uFF08\u5305\u62EC\u5BF9\u8C61\uFF09\u90FD\u53EF\u4EE5\u5F53\u4F5C\u952E\u3002</p><h4 id="\u5B9E\u4F8B\u7684\u5C5E\u6027\u548C\u64CD\u4F5C\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u4F8B\u7684\u5C5E\u6027\u548C\u64CD\u4F5C\u65B9\u6CD5" aria-hidden="true">#</a> \u5B9E\u4F8B\u7684\u5C5E\u6027\u548C\u64CD\u4F5C\u65B9\u6CD5</h4><ul><li>size \u8FD4\u56DE Map \u7ED3\u6784\u7684\u6210\u5458\u603B\u6570</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
  <span class="token punctuation">[</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;tom&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token string">&quot;sex&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u7537&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
obj<span class="token punctuation">.</span>size<span class="token punctuation">;</span> <span class="token comment">//3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>set(key, value) set \u65B9\u6CD5\u8BBE\u7F6E key \u6240\u5BF9\u5E94\u7684\u952E\u503C\uFF0C\u7136\u540E\u8FD4\u56DE\u6574\u4E2A Map \u7ED3\u6784\u3002\u5982\u679C key \u5DF2\u7ECF\u6709\u503C\uFF0C\u5219\u952E\u503C\u4F1A\u88AB\u66F4\u65B0\uFF0C\u5426\u5219\u5C31\u65B0\u751F\u6210\u8BE5\u952E\u3002</li><li>get \u8BFB\u53D6 key \u5BF9\u5E94\u7684\u952E\u503C\uFF0C\u5982\u679C\u627E\u4E0D\u5230 key\uFF0C\u8FD4\u56DE undefined\u3002</li><li>has \u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C\uFF0C\u8868\u793A\u67D0\u4E2A\u952E\u662F\u5426\u5728 Map \u6570\u636E\u7ED3\u6784\u4E2D\u3002</li><li>delete \u5220\u9664\u67D0\u4E2A\u952E\uFF0C\u8FD4\u56DE true\u3002\u5982\u679C\u5220\u9664\u5931\u8D25\uFF0C\u8FD4\u56DE false\u3002</li><li>clear \u5220\u9664\u6240\u6709\u7684\u952E/\u503C\u5BF9\uFF0C\u6CA1\u6709\u8FD4\u56DE\u503C\u3002</li></ul><h2 id="\u6811" tabindex="-1"><a class="header-anchor" href="#\u6811" aria-hidden="true">#</a> \u6811</h2><ul><li>\uFF08\u6570\u7EC4\u8F6C\u6811\uFF09</li><li>left right val</li></ul><p>\u904D\u5386\u67E5\u627E\uFF1A\u6DF1\u5EA6\u4F18\u5148\u3001\u5E7F\u5EA6\u4F18\u5148</p><ul><li>\u524D\u5E8F\u904D\u5386\uFF1A\u4E2D\u5DE6\u53F3</li><li>\u4E2D\u5E8F\u904D\u5386\uFF1A\u5DE6\u4E2D\u53F3</li><li>\u540E\u5E8F\u904D\u5386\uFF1A\u5DE6\u53F3\u4E2D</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u6811\u7ED3\u6784</span>
<span class="token comment">// \u524D\u5E8F\u4E2D\u5E8F\u540E\u5E8F\u904D\u5386</span>
<span class="token keyword">const</span> <span class="token function-variable function">PreOrder</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">node</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>node <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">PreOrder</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">PreOrder</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">InOrder</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">node</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>node <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">InOrder</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">InOrder</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">PostOrder</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">node</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>node <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">PostOrder</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">PostOrder</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u5B8C\u5168\u4E8C\u53C9\u6811-complete-binary-tree" tabindex="-1"><a class="header-anchor" href="#\u5B8C\u5168\u4E8C\u53C9\u6811-complete-binary-tree" aria-hidden="true">#</a> \u5B8C\u5168\u4E8C\u53C9\u6811 complete binary tree</h4><p>\u9664\u4E86\u6700\u540E\u4E00\u5C42\uFF0C\u6BCF\u4E00\u4E2A\u8282\u70B9\u90FD\u6709\u4E24\u4E2A\u5B69\u5B50\uFF0C\u7B2C h \u5C42\uFF0C\u90FD\u9700\u8981\u96C6\u4E2D\u5728\u6700\u5DE6\u9762\u3002</p><h4 id="\u6EE1\u4E8C\u53C9\u6811-full-binary-tree" tabindex="-1"><a class="header-anchor" href="#\u6EE1\u4E8C\u53C9\u6811-full-binary-tree" aria-hidden="true">#</a> \u6EE1\u4E8C\u53C9\u6811 full binary tree</h4><p>\u6BCF\u4E2A\u8282\u70B9\u90FD\u6709\u4E24\u4E2A\u5B69\u5B50 \u53F6\u8282\u70B9</p><h4 id="\u4E8C\u53C9\u641C\u7D22\u6811-bst" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u53C9\u641C\u7D22\u6811-bst" aria-hidden="true">#</a> \u4E8C\u53C9\u641C\u7D22\u6811-BST</h4><ul><li>\u6BCF\u4E00\u4E2A\u8282\u70B9\u5DE6\u4FA7\u90FD\u5C0F\u4E8E\u8BE5\u8282\u70B9\uFF0C\u53F3\u4FA7\u7684\u503C\u90FD\u5927\u4E8E\u8FD9\u4E2A\u672C\u8EAB\u8282\u70B9</li></ul><p>\u6DF1\u5EA6\u4F18\u5148\u904D\u5386\uFF1A\u5C3D\u53EF\u80FD\u6DF1\u7684\u641C\u7D22\u6570\u7684\u5206\u652F\u3002</p><p>\u5E7F\u5EA6\u4F18\u5148\u904D\u5386\uFF1A\u5148\u8BBF\u95EE\u79BB\u6839\u8282\u70B9\u6700\u8FD1\u7684\u8282\u70B9\u3002</p><p>\u5148\u4E2D\u540E\u5E8F\u4FBF\u5229</p><h2 id="\u56FE" tabindex="-1"><a class="header-anchor" href="#\u56FE" aria-hidden="true">#</a> \u56FE</h2><p>...</p><h2 id="\u5806" tabindex="-1"><a class="header-anchor" href="#\u5806" aria-hidden="true">#</a> \u5806</h2><p>\u5806\u53EF\u4EE5\u653E\u5927\u4E1C\u897F\uFF0C\u91CC\u9762\u653E\u5BF9\u8C61\uFF0C\u6570\u7EC4\u7B49\u3002 stack\u6808\u653E\u57FA\u7840\u7C7B\u578Bstring\u3001number\u7B49\u3002 ...</p><h2 id="leetcode-\u7B97\u6CD5\u9898\u89E3\u9898\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#leetcode-\u7B97\u6CD5\u9898\u89E3\u9898\u601D\u8DEF" aria-hidden="true">#</a> leetcode \u7B97\u6CD5\u9898\u89E3\u9898\u601D\u8DEF</h2><h3 id="_20-\u6709\u6548\u7684\u62EC\u53F7" tabindex="-1"><a class="header-anchor" href="#_20-\u6709\u6548\u7684\u62EC\u53F7" aria-hidden="true">#</a> 20.\u6709\u6548\u7684\u62EC\u53F7</h3><p>\u89E3\u9898\uFF1A \u65B0\u5EFA\u4E00\u4E2A\u6808\uFF0C\u904D\u5386\u5B57\u7B26\u4E32\uFF0C\u9047\u5230\u5DE6\u62EC\u53F7\u5165\u6808\uFF0C\u9047\u5230\u53F3\u62EC\u53F7\u4E0E\u6808\u9876\u62EC\u53F7\u5339\u914D\uFF0C\u5C31\u51FA\u6808\u3002 \u6700\u540E\u7A7A\u4E86\u5C31\u5408\u6CD5\uFF0C\u5426\u5219\u4E0D\u5408\u6CD5\u3002\u8BE5\u9898\u65F6\u95F4\u548C\u7A7A\u95F4\u590D\u6742\u5EA6\u90FD\u662F On</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">s</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>boolean<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">isValid</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> stack <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> s<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&quot;(&quot;</span> <span class="token operator">||</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&quot;{&quot;</span> <span class="token operator">||</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&quot;[&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> top <span class="token operator">=</span> stack<span class="token punctuation">[</span>stack<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>
                <span class="token punctuation">(</span>top <span class="token operator">===</span> <span class="token string">&quot;(&quot;</span> <span class="token operator">&amp;&amp;</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39;)&#39;</span><span class="token punctuation">)</span>
                <span class="token operator">||</span> <span class="token punctuation">(</span>top <span class="token operator">===</span> <span class="token string">&quot;{&quot;</span> <span class="token operator">&amp;&amp;</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39;}&#39;</span><span class="token punctuation">)</span>
                <span class="token operator">||</span> <span class="token punctuation">(</span>top <span class="token operator">===</span> <span class="token string">&quot;[&quot;</span> <span class="token operator">&amp;&amp;</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39;]&#39;</span><span class="token punctuation">)</span>
            <span class="token punctuation">)</span> <span class="token punctuation">{</span>
                stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token boolean">false</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> stack<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>hash Map</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">s</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>boolean<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">isValid</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span>length <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">const</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
        <span class="token punctuation">[</span><span class="token string">&#39;(&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;)&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span><span class="token string">&#39;[&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;]&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span><span class="token string">&#39;{&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;}&#39;</span><span class="token punctuation">]</span>
    <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> stack <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> s<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> c <span class="token operator">=</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> t <span class="token operator">=</span> stack<span class="token punctuation">[</span>stack<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span> <span class="token operator">===</span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token boolean">false</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> stack<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_144-\u4E8C\u53C9\u6811\u7684\u524D\u5E8F\u904D\u5386" tabindex="-1"><a class="header-anchor" href="#_144-\u4E8C\u53C9\u6811\u7684\u524D\u5E8F\u904D\u5386" aria-hidden="true">#</a> 144.\u4E8C\u53C9\u6811\u7684\u524D\u5E8F\u904D\u5386</h4><h4 id="_933-\u6700\u8FD1\u7684\u8BF7\u6C42\u6B21\u6570-\u65F6\u95F4\u548C\u7A7A\u95F4\u590D\u6742\u5EA6\u90FD\u662F-on" tabindex="-1"><a class="header-anchor" href="#_933-\u6700\u8FD1\u7684\u8BF7\u6C42\u6B21\u6570-\u65F6\u95F4\u548C\u7A7A\u95F4\u590D\u6742\u5EA6\u90FD\u662F-on" aria-hidden="true">#</a> 933.\u6700\u8FD1\u7684\u8BF7\u6C42\u6B21\u6570 \u65F6\u95F4\u548C\u7A7A\u95F4\u590D\u6742\u5EA6\u90FD\u662F On</h4><h4 id="_237-\u5220\u9664\u94FE\u8868\u4E2D\u7684\u8282\u70B9" tabindex="-1"><a class="header-anchor" href="#_237-\u5220\u9664\u94FE\u8868\u4E2D\u7684\u8282\u70B9" aria-hidden="true">#</a> 237\uFF0C\u5220\u9664\u94FE\u8868\u4E2D\u7684\u8282\u70B9</h4><h4 id="_206-\u53CD\u8F6C\u94FE\u8868" tabindex="-1"><a class="header-anchor" href="#_206-\u53CD\u8F6C\u94FE\u8868" aria-hidden="true">#</a> 206.\u53CD\u8F6C\u94FE\u8868</h4><h4 id="_2-\u4E24\u6570\u76F8\u52A0" tabindex="-1"><a class="header-anchor" href="#_2-\u4E24\u6570\u76F8\u52A0" aria-hidden="true">#</a> 2.\u4E24\u6570\u76F8\u52A0</h4><h4 id="_83-\u5220\u9664\u6392\u5E8F\u94FE\u8868\u4E2D\u7684\u91CD\u590D\u5143\u7D20\u3002" tabindex="-1"><a class="header-anchor" href="#_83-\u5220\u9664\u6392\u5E8F\u94FE\u8868\u4E2D\u7684\u91CD\u590D\u5143\u7D20\u3002" aria-hidden="true">#</a> 83.\u5220\u9664\u6392\u5E8F\u94FE\u8868\u4E2D\u7684\u91CD\u590D\u5143\u7D20\u3002</h4><h4 id="_141-\u73AF\u5F62\u5217\u8868" tabindex="-1"><a class="header-anchor" href="#_141-\u73AF\u5F62\u5217\u8868" aria-hidden="true">#</a> 141\uFF0C\u73AF\u5F62\u5217\u8868</h4><h4 id="_3-\u65E0\u91CD\u590D\u5B57\u7B26\u7684\u6700\u957F\u5B50\u4E32" tabindex="-1"><a class="header-anchor" href="#_3-\u65E0\u91CD\u590D\u5B57\u7B26\u7684\u6700\u957F\u5B50\u4E32" aria-hidden="true">#</a> 3.\u65E0\u91CD\u590D\u5B57\u7B26\u7684\u6700\u957F\u5B50\u4E32</h4><h3 id="_349-\u4E24\u4E2A\u6570\u7EC4\u7684\u4EA4\u96C6" tabindex="-1"><a class="header-anchor" href="#_349-\u4E24\u4E2A\u6570\u7EC4\u7684\u4EA4\u96C6" aria-hidden="true">#</a> 349.\u4E24\u4E2A\u6570\u7EC4\u7684\u4EA4\u96C6</h3><p>\u6C42\u4EA4\u96C6 fillter\uFF0Chas \u6C42\u5DEE\u96C6\u3002\u6B63\u597D\u53CD\u8FC7\u6765\uFF0C\u611F\u53F9\u53F7 \u2755</p><h4 id="_1-\u4E24\u6570\u4E4B\u548C" tabindex="-1"><a class="header-anchor" href="#_1-\u4E24\u6570\u4E4B\u548C" aria-hidden="true">#</a> 1.\u4E24\u6570\u4E4B\u548C</h4><h4 id="_704-\u4E8C\u5206\u67E5\u627E" tabindex="-1"><a class="header-anchor" href="#_704-\u4E8C\u5206\u67E5\u627E" aria-hidden="true">#</a> 704. \u4E8C\u5206\u67E5\u627E</h4><h4 id="\u4E8C\u5206\u67E5\u627E" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u5206\u67E5\u627E" aria-hidden="true">#</a> \u4E8C\u5206\u67E5\u627E</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">nums</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">target</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">search</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">nums<span class="token punctuation">,</span> target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> left <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">let</span> right <span class="token operator">=</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;=</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> mid <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>right <span class="token operator">-</span> left<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">+</span> left<span class="token punctuation">)</span><span class="token comment">//+low\u9632\u6B62\u6574\u6570\u6EA2\u51FA</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">===</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> mid <span class="token comment">//\u51FA\u53E3 \u8FD4\u56DE\u4E0B\u6807</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">&lt;</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            left <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token comment">//\u780D\u6389\u5DE6\u534A\u8FB9</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            right <span class="token operator">=</span> mid <span class="token operator">-</span> <span class="token number">1</span><span class="token comment">//\u780D\u6389\u53F3\u534A\u8FB9</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u94FE\u8868\u7684 dummy \u8282\u70B9\uFF1A 1. \u4F5C\u4E3A\u65B0\u94FE\u8868\u7684\u5934\u8282\u70B9 2. \u89E3\u51B3\u94FE\u8868\u5934\u90E8\u7684\u6781\u7AEF\u60C5\u51B5 dummy \u8282\u70B9</p><h3 id="_278-\u7B2C\u4E00\u4E2A\u9519\u8BEF\u7684\u7248\u672C" tabindex="-1"><a class="header-anchor" href="#_278-\u7B2C\u4E00\u4E2A\u9519\u8BEF\u7684\u7248\u672C" aria-hidden="true">#</a> 278. \u7B2C\u4E00\u4E2A\u9519\u8BEF\u7684\u7248\u672C</h3><h4 id="\u4E8C\u5206\u67E5\u627E-1" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u5206\u67E5\u627E-1" aria-hidden="true">#</a> \u4E8C\u5206\u67E5\u627E</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">solution</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">isBadVersion</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>integer<span class="token punctuation">}</span></span> <span class="token parameter">n</span> Total versions
     * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>integer<span class="token punctuation">}</span></span> The first bad version
     */</span>
    <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> low <span class="token operator">=</span> <span class="token number">1</span>
        <span class="token keyword">let</span> high <span class="token operator">=</span> n
        <span class="token keyword">while</span> <span class="token punctuation">(</span>low <span class="token operator">&lt;</span> high<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> mid <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>low<span class="token operator">+</span><span class="token punctuation">(</span>high <span class="token operator">-</span> low<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span> <span class="token punctuation">)</span>
            <span class="token keyword">let</span> val <span class="token operator">=</span> <span class="token function">isBadVersion</span><span class="token punctuation">(</span>mid<span class="token punctuation">)</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                high <span class="token operator">=</span> mid
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                low <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> low

    <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_35-\u641C\u7D22\u63D2\u5165\u4F4D\u7F6E" tabindex="-1"><a class="header-anchor" href="#_35-\u641C\u7D22\u63D2\u5165\u4F4D\u7F6E" aria-hidden="true">#</a> 35. \u641C\u7D22\u63D2\u5165\u4F4D\u7F6E</h3><h4 id="\u4E8C\u5206\u67E5\u627E-2" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u5206\u67E5\u627E-2" aria-hidden="true">#</a> \u4E8C\u5206\u67E5\u627E</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">searchInsert</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">nums<span class="token punctuation">,</span> target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> left<span class="token operator">=</span><span class="token number">0</span>
    <span class="token keyword">let</span> right<span class="token operator">=</span>nums<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>left<span class="token operator">&lt;=</span>right<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">let</span> mid<span class="token operator">=</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>right<span class="token operator">-</span>left<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token operator">+</span>left<span class="token punctuation">)</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span><span class="token operator">===</span>target<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> mid
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span><span class="token operator">&lt;=</span>target<span class="token punctuation">)</span><span class="token punctuation">{</span>
            left <span class="token operator">=</span>mid<span class="token operator">+</span><span class="token number">1</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
            right<span class="token operator">=</span>mid<span class="token operator">-</span><span class="token number">1</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> left
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_21-\u5408\u5E76\u4E24\u4E2A\u6709\u5E8F\u7684\u94FE\u8868-\u5F52\u5E76" tabindex="-1"><a class="header-anchor" href="#_21-\u5408\u5E76\u4E24\u4E2A\u6709\u5E8F\u7684\u94FE\u8868-\u5F52\u5E76" aria-hidden="true">#</a> 21.\u5408\u5E76\u4E24\u4E2A\u6709\u5E8F\u7684\u94FE\u8868(\u5F52\u5E76)</h3><ul><li>\u601D\u8DEF <ul><li>\u548C\u5F52\u5E76\u6392\u5E8F\u5F88\u50CF\uFF0C\u5C06\u6570\u7EC4\u66FF\u6362\u6210\u94FE\u8868\u5C31\u53EF\u4EE5</li></ul></li><li>\u6B65\u9AA4 <ul><li>\u65B0\u5EFA\u4E00\u4E2A\u94FE\u8868\uFF0C\u4F5C\u4E3A\u8FD4\u56DE\u7ED3\u679C</li><li>\u7528\u6307\u9488\u904D\u5386\u4E24\u4E2A\u6709\u5E8F\u94FE\u8868\uFF0C\u5E76\u6BD4\u8F83\u4E24\u4E2A\u94FE\u8868\u7684\u5F53\u524D\u8282\u70B9\uFF0C\u8F83\u5C0F\u8005\u5148\u63A5\u5165\u65B0\u94FE\u8868\uFF0C\u5E76\u5C06\u6307\u9488\u50CF\u540E\u79FB\u4E00\u6B65</li><li>\u94FE\u8868\u904D\u5386\u7ED3\u675F\uFF0C\u8FD4\u56DE\u65B0\u94FE\u8868</li></ul></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">mergeTwoLists</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">list1<span class="token punctuation">,</span> list2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> node <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListNode</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token keyword">let</span> p <span class="token operator">=</span> node <span class="token comment">//\u5982\u679C\u4E0D\u65B0\u5EFA\u4E00\u4E2A\u6307\u9488\uFF0C\u4E0D\u77E5\u9053\u6307\u5230\u54EA\u91CC\u4E86</span>
    <span class="token keyword">let</span> p1 <span class="token operator">=</span> list1<span class="token comment">//\u60F3\u904D\u5386\u9700\u8981\u6307\u9488</span>
    <span class="token keyword">let</span> p2 <span class="token operator">=</span> list2
    <span class="token keyword">while</span> <span class="token punctuation">(</span>p1 <span class="token operator">&amp;&amp;</span> p2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>p1<span class="token punctuation">.</span>val <span class="token operator">&gt;</span> p2<span class="token punctuation">.</span>val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            p<span class="token punctuation">.</span>next <span class="token operator">=</span> p2
            p2 <span class="token operator">=</span> p2<span class="token punctuation">.</span>next<span class="token comment">//\u7528\u8FC7\u4E86\uFF0C\u5411\u540E\u79FB\u52A8\u4E00\u4F4D</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            p<span class="token punctuation">.</span>next <span class="token operator">=</span> p1
            p1 <span class="token operator">=</span> p1<span class="token punctuation">.</span>next
        <span class="token punctuation">}</span>
        p <span class="token operator">=</span> p<span class="token punctuation">.</span>next
    <span class="token punctuation">}</span>
    <span class="token comment">//\u8FB9\u754C\u60C5\u51B5</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>p1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        p<span class="token punctuation">.</span>next <span class="token operator">=</span> p1
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>p2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        p<span class="token punctuation">.</span>next <span class="token operator">=</span> p2
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> node<span class="token punctuation">.</span>next
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_374-\u731C\u6570\u5B57\u5927\u5C0F" tabindex="-1"><a class="header-anchor" href="#_374-\u731C\u6570\u5B57\u5927\u5C0F" aria-hidden="true">#</a> 374.\u731C\u6570\u5B57\u5927\u5C0F</h3><ul><li>\u89E3\u9898\uFF1A <ul><li>\u4ECE\u6570\u7EC4\u7684\u4E2D\u95F4\u5143\u7D20\u5F00\u59CB\uFF0C\u5982\u679C\u4E2D\u95F4\u5143\u7D20\u6B63\u597D\u662F\u76EE\u6807\u503C\uFF0C\u5219\u641C\u7D22\u8FC7\u7A0B\u7ED3\u675F</li><li>\u5982\u679C\u76EE\u6807\u503C\u5927\u4E8E\u6216\u8005\u5C0F\u4E8E\u4E2D\u95F4\u5143\u7D20\uFF0C\u5219\u5728\u6570\u7EC4\u5927\u4E8E\u6216\u5C0F\u4E8E\u4E2D\u95F4\u7684\u90A3\u4E00\u534A\u53BB\u67E5\u627E</li><li></li></ul></li><li>\u4E8C\u5206\u641C\u7D22 <ul><li>\u65F6\u95F4\u590D\u6742\u5EA6O(logN) <blockquote><p>\u51E1\u662F\u5206\u5F00\u4E24\u534A\u7684\u57FA\u672C\u4E0A\u90FD\u662FlogN</p></blockquote></li><li>\u7A7A\u95F4\u662FO1</li></ul></li></ul><div class="language-JS ext-JS line-numbers-mode"><pre class="language-JS"><code>var guessNumber = function (n) {
    let low = 1
    let high = n
    while (low &lt;= high) {
        const mid = Math.floor((low+high) / 2)
        const res = guess(mid)
        if (res == 0) {
            return mid
        } else if (res == 1) {
            low = mid + 1
        } else {
            high = mid - 1
        }
    }
};
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u5206\u800C\u6CBB\u4E4B\u601D\u60F3\uFF0C\u9012\u5F52 <ul><li>\u65F6\u95F4\u590D\u6742\u5EA6O(logN)</li></ul><blockquote><p>\u51E1\u662F\u5206\u5F00\u4E24\u534A\u7684\u57FA\u672C\u4E0A\u90FD\u662FlogN</p></blockquote><ul><li>\u7A7A\u95F4\u662FO(logN)</li></ul></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">guessNumber</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token function-variable function">cur</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">low<span class="token punctuation">,</span> high</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>low <span class="token operator">&gt;</span> high<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token punctuation">}</span>
        <span class="token keyword">const</span> mid <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>low <span class="token operator">+</span> high<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token function">guess</span><span class="token punctuation">(</span>mid<span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>res <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> mid
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>res <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token function">cur</span><span class="token punctuation">(</span>mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> high<span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>res <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token function">cur</span><span class="token punctuation">(</span>low<span class="token punctuation">,</span> mid <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token function">cur</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_42-\u63A5\u96E8\u6C34" tabindex="-1"><a class="header-anchor" href="#_42-\u63A5\u96E8\u6C34" aria-hidden="true">#</a> 42.\u63A5\u96E8\u6C34</h3><p>\u601D\u8DEF\uFF1A</p><ul><li>\u4F4D\u7F6E i \u80FD\u88C5\u4E0B\u591A\u5C11\u6C34\uFF0C\u5176\u5B9E\u548C\u5DE6\u4FA7\u548C\u53F3\u4FA7\u7684\u9AD8\u5EA6</li><li>Math.min(\u5DE6\u4FA7\u9AD8\u5EA6\uFF0C\u53F3\u4FA7\u9AD8\u5EA6)-\u81EA\u5DF1\u9AD8\u5EA6height[i]</li></ul><p>\u66B4\u529B\u7834\u89E3</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">trap</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">height</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>height<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span>
    <span class="token keyword">let</span> len <span class="token operator">=</span> height<span class="token punctuation">.</span>length
    <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> left_max <span class="token operator">=</span> <span class="token number">0</span>
        <span class="token keyword">let</span> right_max <span class="token operator">=</span> <span class="token number">0</span>
        <span class="token comment">//\u5DE6\u4FA7\u6700\u5927</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> i<span class="token punctuation">;</span> j <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            left_max <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>left_max<span class="token punctuation">,</span> height<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//\u53F3\u4FA7\u6700\u5927</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> i<span class="token punctuation">;</span> j <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> j<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            right_max <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>right_max<span class="token punctuation">,</span> height<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        res<span class="token operator">+=</span>Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>left_max<span class="token punctuation">,</span>right_max<span class="token punctuation">)</span><span class="token operator">-</span>height<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> res
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u52A8\u6001\u89C4\u5212-\u66B4\u529B\u7834\u89E3\u4F18\u5316</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">trap</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">height</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>height<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span>
    <span class="token keyword">let</span> len <span class="token operator">=</span> height<span class="token punctuation">.</span>length
    <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token number">0</span>

    <span class="token keyword">let</span> l_max <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>len<span class="token punctuation">)</span><span class="token comment">//\u4E00\u4E2A\u6570\u7EC4\u5B58\u6BCF\u4E00\u4E2A\u4F4D\u7F6E\u4E0A\u5DE6\u53F3\u7684\u6700\u9AD8</span>
    <span class="token keyword">let</span> r_max <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>len<span class="token punctuation">)</span>

    l_max<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> height<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token comment">//\u9ED8\u8BA4\u503C</span>
    r_max<span class="token punctuation">[</span>len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span> height<span class="token punctuation">[</span>len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        l_max<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>l_max<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> height<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> len<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        r_max<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>r_max<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> height<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        res <span class="token operator">+=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>l_max<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> r_max<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span> height<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> res
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53CC\u6307\u9488</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">trap</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">height</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>height<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span>
    <span class="token keyword">let</span> len <span class="token operator">=</span> height<span class="token punctuation">.</span>length
    <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token number">0</span>

    <span class="token keyword">let</span> left <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">let</span> right <span class="token operator">=</span> len <span class="token operator">-</span> <span class="token number">1</span>

    <span class="token keyword">let</span> leftMax <span class="token operator">=</span> height<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
    <span class="token keyword">let</span> rightMax <span class="token operator">=</span> height<span class="token punctuation">[</span>len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>

    <span class="token keyword">while</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;=</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        leftMax <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>leftMax<span class="token punctuation">,</span> height<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">)</span>
        rightMax <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>rightMax<span class="token punctuation">,</span> height<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>leftMax <span class="token operator">&lt;</span> rightMax<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            res <span class="token operator">+=</span> leftMax <span class="token operator">-</span> height<span class="token punctuation">[</span>left<span class="token punctuation">]</span>
            left<span class="token operator">++</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            res <span class="token operator">+=</span> rightMax <span class="token operator">-</span> height<span class="token punctuation">[</span>right<span class="token punctuation">]</span>
            right<span class="token operator">--</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> res
<span class="token punctuation">}</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E8C\u53C9\u6811\u5C42\u5E8F\u904D\u5386</p><h2 id="\u6392\u5E8F\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u6392\u5E8F\u7B97\u6CD5" aria-hidden="true">#</a> \u6392\u5E8F\u7B97\u6CD5</h2><ul><li>\u5192\u6CE1\u6392\u5E8F</li><li>\u9009\u62E9\u6392\u5E8F</li><li>\u63D2\u5165\u6392\u5E8F</li><li>\u5F52\u5E76\u6392\u5E8F</li><li>\u5FEB\u901F\u6392\u5E8F</li><li>......</li></ul>`,94),b={href:"https://visualgo.net/zh/sorting",target:"_blank",rel:"noopener noreferrer"},h=s("\u6392\u5E8F\u53EF\u89C6\u5316\u6F14\u793A\u5730\u5740"),w=a(`<h3 id="\u5192\u6CE1\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u5192\u6CE1\u6392\u5E8F" aria-hidden="true">#</a> \u5192\u6CE1\u6392\u5E8F</h3><ul><li>\u601D\u8DEF <ul><li>\u6BD4\u8F83\u6240\u6709\u76F8\u90BB\u5143\u7D20\uFF0C\u5982\u679C\u7B2C\u4E00\u4E2A\u6BD4\u7B2C\u4E8C\u4E2A\u5927\uFF0C\u5219\u4EA4\u6362\u4ED6\u4EEC</li><li>\u4E00\u8F6E\u4E0B\u6765\uFF0C\u53EF\u4EE5\u4FDD\u8BC1\u6700\u540E\u4E00\u4E2A\u6570\u662F\u6700\u5927\u7684</li><li>\u6267\u884Cn-1\u8F6E\uFF0C\u5C31\u53EF\u4EE5\u5B8C\u6210\u6392\u5E8F</li></ul></li><li>\u65F6\u95F4\u590D\u6742\u5EA6\u4E3AO(n^2)</li></ul><h4 id="code" tabindex="-1"><a class="header-anchor" href="#code" aria-hidden="true">#</a> code</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">56</span><span class="token punctuation">,</span> <span class="token number">88</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">555</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">46</span><span class="token punctuation">,</span> <span class="token number">56</span><span class="token punctuation">,</span> <span class="token number">82</span><span class="token punctuation">,</span> <span class="token number">93</span><span class="token punctuation">,</span> <span class="token number">999</span><span class="token punctuation">,</span> <span class="token number">998</span><span class="token punctuation">]</span>
  <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">bubbleSoet</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token keyword">this</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&gt;</span> arr<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                  <span class="token comment">// let temp = arr[j]</span>
                  <span class="token comment">// arr[j] = arr[j + 1]</span>
                  <span class="token comment">// arr[j + 1] = temp</span>
                  <span class="token punctuation">[</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>arr<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token comment">//es6\u89E3\u6784</span>
              <span class="token punctuation">}</span>
          <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> arr
  <span class="token punctuation">}</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">bubbleSoet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9009\u62E9\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u9009\u62E9\u6392\u5E8F" aria-hidden="true">#</a> \u9009\u62E9\u6392\u5E8F</h3><ul><li>\u601D\u8DEF <ul><li>\u627E\u5230\u6570\u7EC4\u4E2D\u7684\u6700\u5C0F\u503C\uFF0C\u9009\u4E2D\u4ED6\u5E76\u5C06\u5176\u653E\u7F6E\u5728\u7B2C\u4E00\u4F4D</li><li>\u63A5\u7740\u627E\u5230\u7B2C\u4E8C\u5C0F\u7684\u503C\uFF0C\u9009\u4E2D\u4ED6\u5E76\u5C06\u5176\u653E\u7F6E\u5728\u7B2C\u4E8C\u4F4D</li><li>\u4EE5\u6B64\u7C7B\u63A8\uFF0C\u6267\u884Cn-1\u8F6E,\u7C7B\u4F3C\u4E8E\u626B\u63CF,\u533A\u95F4\u4E0D\u65AD\u5728\u7F29\u5C0F</li></ul></li><li>\u65F6\u95F4\u590D\u6742\u5EA6\u4E3AO(n^2)</li></ul><h4 id="code-1" tabindex="-1"><a class="header-anchor" href="#code-1" aria-hidden="true">#</a> code</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span>
<span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">selectionSort</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">/*
        \u91CD\u590D\uFF08\u5143\u7D20\u4E2A\u6570-1\uFF09\u6B21
            \u628A\u7B2C\u4E00\u4E2A\u6CA1\u6709\u6392\u5E8F\u8FC7\u7684\u5143\u7D20\u8BBE\u7F6E\u4E3A\u6700\u5C0F\u503C
            \u904D\u5386\u6BCF\u4E2A\u6CA1\u6709\u6392\u5E8F\u8FC7\u7684\u5143\u7D20
                \u5982\u679C\u5143\u7D20 &lt; \u73B0\u5728\u7684\u6700\u5C0F\u503C
                \u5C06\u6B64\u5143\u7D20\u8BBE\u7F6E\u6210\u4E3A\u65B0\u7684\u6700\u5C0F\u503C
            \u5C06\u6700\u5C0F\u503C\u548C\u7B2C\u4E00\u4E2A\u6CA1\u6709\u6392\u5E8F\u8FC7\u7684\u4F4D\u7F6E\u4EA4\u6362
    */</span>
    <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token keyword">this</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> indexMin <span class="token operator">=</span> i
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> i<span class="token punctuation">;</span> j <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>indexMin<span class="token punctuation">]</span> <span class="token operator">&gt;</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                indexMin <span class="token operator">=</span> j<span class="token comment">//\u627E\u5230\u8FD9\u4E00\u8F6E\u7684\u6700\u5C0F\u503C\u7684\u4E0B\u8868\u4E0B\u6807</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">const</span> temp <span class="token operator">=</span> arr<span class="token punctuation">[</span>indexMin<span class="token punctuation">]</span>
        arr<span class="token punctuation">[</span>indexMin<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
        arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> temp
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> arr
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u63D2\u5165\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u63D2\u5165\u6392\u5E8F" aria-hidden="true">#</a> \u63D2\u5165\u6392\u5E8F</h3><ul><li>\u601D\u8DEF <ul><li>\u4ECE\u7B2C\u4E8C\u6570\u5F00\u59CB\u5F80\u524D\u6BD4</li><li>\u6BD4\u4ED6\u5927\u5C31\u5F80\u540E\u6392\uFF08\u628A\u8FD9\u4E2A\u6570\u5B57\u5411\u540E\u79FB\u4E00\u4F4D\uFF09</li><li>\u4EE5\u6B64\u7C7B\u63A8\uFF0C\u8FDB\u884C\u5230\u6700\u540E\u4E00\u4E2A\u6570</li></ul></li><li>\u65F6\u95F4\u590D\u6742\u5EA6\u4E3AO(n^2)</li></ul><h4 id="code-2" tabindex="-1"><a class="header-anchor" href="#code-2" aria-hidden="true">#</a> code</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span>
  <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">mergeSort</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">/*
          \u5C06\u7B2C\u4E00\u4E2A\u5143\u7D20\u6807\u8BB0\u4E3A\u5DF2\u6392\u5E8F
          \u904D\u5386\u6BCF\u4E2A\u6CA1\u6709\u6392\u5E8F\u8FC7\u7684\u5143\u7D20
          \u201C\u63D0\u53D6\u201D \u5143\u7D20 X
          i = \u6700\u540E\u6392\u5E8F\u8FC7\u5143\u7D20\u7684\u6307\u6570 \u5230 0 \u7684\u904D\u5386
          \u5982\u679C\u73B0\u5728\u6392\u5E8F\u8FC7\u7684\u5143\u7D20 &gt; \u63D0\u53D6\u7684\u5143\u7D20
          \u5C06\u6392\u5E8F\u8FC7\u7684\u5143\u7D20\u5411\u53F3\u79FB\u4E00\u683C
          \u5426\u5219\uFF1A\u63D2\u5165\u63D0\u53D6\u7684\u5143\u7D20
      */</span>
      <span class="token comment">//\u7B2C\u4E8C\u4E2A\u6570\u5F80\u524D\u6BD4</span>
      <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token keyword">this</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">let</span> temp <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token comment">//\u6807\u8BB0\u4E3A\u5DF2\u6392\u5E8F</span>
          <span class="token keyword">let</span> j <span class="token operator">=</span> i<span class="token comment">//\u63D0\u4E2A\u53D8\u91CF</span>
          <span class="token keyword">while</span> <span class="token punctuation">(</span>j <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//\u5F80\u524D\u6BD4\uFF0C\u80FD\u62FF\u5230\u524D\u9762\u6240\u6709\u6570\u7684\u4E0B\u6807</span>
              <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> temp<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//\u56E0\u4E3A\u521D\u59CB\u5316\u662F\u7B2C\u4E8C\u4E2A\u6570\u5B57\uFF0C\u6240\u4EE5\u662Fj - 1</span>
                  arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token comment">//\u5411\u53F3\u79FB\u4E00\u683C</span>
              <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                  <span class="token keyword">break</span>
              <span class="token punctuation">}</span>
              j<span class="token operator">--</span>
          <span class="token punctuation">}</span>
          arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> temp
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> arr
  <span class="token punctuation">}</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">mergeSort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5F52\u5E76\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u5F52\u5E76\u6392\u5E8F" aria-hidden="true">#</a> \u5F52\u5E76\u6392\u5E8F</h3><ul><li><p>\u601D\u8DEF</p><ul><li>\u5206\uFF1A\u628A\u6570\u7EC4\u5288\u5F00\u4E24\u534A\uFF0C\u518D\u9012\u5F52\u7684\u5BF9\u5B50\u6570\u7EC4\u8FDB\u884C \u5206 \u64CD\u4F5C\uFF0C\u77E5\u9053\u5206\u6210\u4E00\u4E2A\u4E2A\u5355\u72EC\u7684\u6570</li><li>\u5408\uFF1A\u628A\u4E24\u4E2A\u6570\u7EC4\u5E76\u4E3A\u6709\u5E8F\u6570\u7EC4\uFF0C\u518D\u5BF9\u6709\u5E8F\u6570\u7EC4\u8FDB\u884C\u5408\u5E76\uFF0C\u76F4\u5230\u5168\u90E8\u5B50\u6570\u7EC4\u5408\u5E76\u4E00\u4E2A\u5B8C\u6574\u6570\u7EC4</li><li>\u4EE5\u6B64\u7C7B\u63A8\uFF0C\u8FDB\u884C\u5230\u6700\u540E\u4E00\u4E2A\u6570</li></ul></li><li><p>\u5B9E\u73B0</p><ul><li>\u65B0\u5EFA\u4E00\u4E2A\u7A7A\u6570\u7EC4res\uFF0C\u7528\u4E8E\u5B58\u653E\u6700\u7EC8\u6392\u5E8F\u540E\u7684\u6570\u7EC4</li><li>\u6BD4\u8F83\u4E24\u4E2A\u6709\u5E8F\u6570\u7EC4\u7684\u5934\u90E8\uFF0C\u8F83\u5C0F\u8005\u51FA\u961F\u5E76\u63A8\u5165res\u4E2D</li><li>\u5982\u679C\u4E24\u4E2A\u6570\u7EC4\u8FD8\u6709\u503C\uFF0C\u5C31\u91CD\u590D\u7B2C\u4E8C\u6B65</li></ul></li><li><p>\u65F6\u95F4\u590D\u6742\u5EA6\u4E3AO(n*logN)</p><ul><li>\u5206\u7684\u65F6\u95F4\u590D\u6742\u5EA6 logN</li><li>\u5408\u7684\u65F6\u95F4\u590D\u6742\u5EA6 n</li></ul></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span>
<span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">insertionSort</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">/*
        \u5C06\u6BCF\u4E2A\u5143\u7D20\u62C6\u5206\u6210\u5927\u5C0F\u4E3A1\u7684\u90E8\u5206,\u7528\u9012\u5F52
        recursively merge adjacent partitions
        i = \u5DE6\u4FA7\u5F00\u59CB\u9879\u6307\u6570 \u5230 \u53F3\u4FA7\u6700\u540E\u9879\u6307\u6570 \u7684\u904D\u5386\uFF08\u4E24\u7AEF\u5305\u62EC\uFF09
        \u5982\u679C\u5DE6\u4FA7\u9996\u503C &lt;= \u53F3\u4FA7\u9996\u503C
        \u62F7\u8D1D\u5DE6\u4FA7\u9996\u9879\u7684\u503C
        \u5426\u5219\uFF1A \u62F7\u8D1D\u53F3\u4FA7\u90E8\u5206\u9996\u503C
        \u5C06\u5143\u7D20\u62F7\u8D1D\u8FDB\u539F\u6765\u7684\u6570\u7EC4\u4E2D
    */</span>
    <span class="token comment">//\u7B2C\u4E8C\u4E2A\u6570\u5F80\u524D\u6BD4</span>
    <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token keyword">this</span>
    <span class="token keyword">const</span> <span class="token function-variable function">cur</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> arr
        <span class="token punctuation">}</span>
        <span class="token comment">// \u8FDB\u884C\u5206\u7684\u64CD\u4F5C</span>
        <span class="token keyword">let</span> mid <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token keyword">let</span> leftArr <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> mid<span class="token punctuation">)</span>
        <span class="token keyword">let</span> rightArr <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>mid<span class="token punctuation">,</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
        <span class="token keyword">const</span> left <span class="token operator">=</span> <span class="token function">cur</span><span class="token punctuation">(</span>leftArr<span class="token punctuation">)</span>
        <span class="token keyword">const</span> right <span class="token operator">=</span> <span class="token function">cur</span><span class="token punctuation">(</span>rightArr<span class="token punctuation">)</span>
        <span class="token comment">//\u8FDB\u884C\u5408\u7684\u64CD\u4F5C</span>
        <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>left<span class="token punctuation">.</span>length <span class="token operator">||</span> right<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>left<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> right<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>left<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> right<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">?</span> right<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> left<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>left<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>left<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>right<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>right<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> res
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token function">cur</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">insertionSort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5FEB\u901F\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u5FEB\u901F\u6392\u5E8F" aria-hidden="true">#</a> \u5FEB\u901F\u6392\u5E8F</h3><ul><li>\u601D\u8DEF <ul><li>\u4ECE\u6570\u7EC4\u4E2D\u4EFB\u610F\u9009\u62E9\u4E00\u4E2A\u5143\u7D20\u4F5C\u4E3A\u57FA\u51C6\uFF0C\u6240\u6709\u6BD4\u57FA\u51C6\u5C0F\u7684\u5143\u7D20\u653E\u5728\u57FA\u51C6\u524D\u9762\uFF0C\u6BD4\u57FA\u51C6\u5927\u7684\u5143\u7D20\u653E\u5728\u57FA\u51C6\u540E\u9762</li><li>\u9012\u5F52\uFF1A\u9012\u5F52\u5730\u5BF9\u57FA\u51C6\u524D\u540E\u7684\u5B50\u6570\u7EC4\u8FDB\u884C\u5206\u533A\u64CD\u4F5C</li></ul></li><li>\u65F6\u95F4\u590D\u6742\u5EA6\u4E3AO(n*logN) <ul><li>\u9012\u5F52\u7684\u65F6\u95F4\u590D\u6742\u5EA6 logN</li><li>\u5206\u533A\u7684\u65F6\u95F4\u590D\u6742\u5EA6 n</li></ul></li></ul><h4 id="code-3" tabindex="-1"><a class="header-anchor" href="#code-3" aria-hidden="true">#</a> code</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span>
<span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">quickSort</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token function-variable function">cur</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> arr <span class="token comment">//\u9012\u5F52\u51FA\u53E3</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">let</span> left <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token keyword">let</span> right <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token keyword">let</span> mid <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>mid <span class="token operator">&gt;</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                left<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">//\u653E\u5DE6\u8FB9</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                right<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">//\u653E\u53F3\u8FB9</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token function">cur</span><span class="token punctuation">(</span>left<span class="token punctuation">)</span><span class="token punctuation">,</span> mid<span class="token punctuation">,</span> <span class="token operator">...</span><span class="token function">cur</span><span class="token punctuation">(</span>right<span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token function">cur</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
    <span class="token comment">//\u6539\u53D8\u539F\u6570\u7EC4</span>
    res<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> item
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
arr<span class="token punctuation">.</span><span class="token function">quickSort</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u641C\u7D22" tabindex="-1"><a class="header-anchor" href="#\u641C\u7D22" aria-hidden="true">#</a> \u641C\u7D22</h2><h3 id="\u987A\u5E8F\u641C\u7D22" tabindex="-1"><a class="header-anchor" href="#\u987A\u5E8F\u641C\u7D22" aria-hidden="true">#</a> \u987A\u5E8F\u641C\u7D22</h3><p>\u601D\u8DEF\uFF1A</p><ul><li>\u904D\u5386\u6570\u7EC4</li><li>\u627E\u5230\u503C\u8FD4\u56DE\u4E0B\u6807</li><li>\u904D\u5386\u7ED3\u675F\u6CA1\u627E\u5230\u8FD4\u56DE-1</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">sequentialSeach</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> item<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> i
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span>
<span class="token punctuation">}</span>
<span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> res <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">sequentialSeach</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4E8C\u5206\u641C\u7D22" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u5206\u641C\u7D22" aria-hidden="true">#</a> \u4E8C\u5206\u641C\u7D22</h3><p>\u524D\u63D0 \uFF1A\u6570\u7EC4\u662F\u6709\u5E8F\u7684</p><ul><li>\u601D\u8DEF <ul><li>\u4ECE\u6570\u7EC4\u4E2D\u7684\u4E2D\u95F4\u5143\u7D20\u5F00\u59CB\uFF0C\u5982\u679C\u4E2D\u95F4\u5143\u7D20\u6B63\u597D\u662F\u76EE\u6807\u503C\uFF0C\u641C\u7D22\u7ED3\u675F\uFF0C\u8FD4\u56DE\u4E0B\u6807</li><li>\u5982\u679C\u76EE\u6807\u503C\u5927\u4E8E\u6216\u5C0F\u4E8E\u4E2D\u95F4\u5143\u7D20\uFF0C\u5219\u5728\u5927\u4E8E\u6216\u5C0F\u4E8E\u4E2D\u95F4\u5143\u7D20\u7684\u90A3\u4E00\u534A\u6570\u7EC4\u4E2D\u641C\u7D22</li><li>\u6BCF\u6B21\u641C\u7D22\u8303\u56F4\u90FD\u7F29\u5C0F\u4E00\u534A\uFF0C\u6548\u7387\u63D0\u5347</li></ul></li><li>\u65F6\u95F4\u590D\u6742\u5EA6\u4E3AO(logN) <ul><li>\u8FD9\u79CD\u5288\u5F00\u4E24\u534A\u7684\u57FA\u672C\u90FD\u662FlogN</li></ul></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">binary_search</span><span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> low <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
        high <span class="token operator">=</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>low <span class="token operator">&lt;=</span> high<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> mid <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token punctuation">(</span>high <span class="token operator">+</span> low<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">==</span> arr<span class="token punctuation">[</span>mid<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> mid<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">&gt;</span> arr<span class="token punctuation">[</span>mid<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            low <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">&lt;</span> arr<span class="token punctuation">[</span>mid<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            high <span class="token operator">=</span> mid <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">86</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token function">binary_search</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 9 \u8FD4\u56DE\u76EE\u6807\u5143\u7D20\u7684\u7D22\u5F15\u503C  </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5206\u800C\u6CBB\u4E4B" tabindex="-1"><a class="header-anchor" href="#\u5206\u800C\u6CBB\u4E4B" aria-hidden="true">#</a> \u5206\u800C\u6CBB\u4E4B</h2><ul><li>\u5206\u800C\u6CBB\u4E4B\u662F\u7B97\u6CD5\u8BBE\u8BA1\u4E2D\u7684\u4E00\u79CD\u65B9\u6CD5</li><li>\u5B83\u5C06\u4E00\u4E2A\u95EE\u9898<b style="color:red;">\u5206</b>\u6210\u591A\u4E2A\u548C\u539F\u95EE\u9898\u76F8\u4F3C\u7684\u5C0F\u95EE\u9898\uFF0C<b style="color:red;">\u9012\u5F52\u89E3\u51B3</b>\u5C0F\u95EE\u9898\uFF0C\u518D\u5C06\u7ED3\u679C<b style="color:red;">\u5408</b>\u5E76\u4EE5\u89E3\u51B3\u539F\u6765\u7684\u95EE\u9898\u3002</li></ul><h4 id="\u573A\u666F" tabindex="-1"><a class="header-anchor" href="#\u573A\u666F" aria-hidden="true">#</a> \u573A\u666F</h4><ul><li>\u5F52\u5E76\u6392\u5E8F</li><li>\u5FEB\u901F\u6392\u5E8F</li><li>374\u9898\u731C\u6570\u5B57\u5927\u5C0F \u4E8C\u5206\u641C\u7D22</li></ul><h3 id="_226-\u7FFB\u8F6C\u4E8C\u53C9\u6811" tabindex="-1"><a class="header-anchor" href="#_226-\u7FFB\u8F6C\u4E8C\u53C9\u6811" aria-hidden="true">#</a> 226.\u7FFB\u8F6C\u4E8C\u53C9\u6811</h3><ul><li>\u601D\u8DEF\uFF1A <ul><li>\u5148\u7FFB\u8F6C\u5DE6\u53F3\u5B50\u6811\uFF0C\u518D\u5C06\u5B50\u6811\u6362\u4E2A\u4F4D\u7F6E</li><li>\u7B26\u5408 \u5206\u3001\u89E3\u3001\u5408 \u7279\u6027</li><li>\u8003\u8651\u5206\u800C\u6CBB\u4E4B</li></ul></li><li>\u6B65\u9AA4\uFF1A <ul><li><p>\u5206\uFF1A\u83B7\u53D6\u5DE6\u53F3\u5B50\u6811</p></li><li><p>\u89E3\uFF1A\u9012\u5F52\u7684\u7FFB\u8F6C\u5DE6\u53F3\u5B50\u6811</p></li><li><p>\u5408\uFF1A\u5C06\u7FFB\u8F6C\u540E\u7684\u5DE6\u53F3\u5B50\u6811\u6362\u4E2A\u4F4D\u7F6E\u653E\u5230\u6839\u8282\u70B9\u4E0A</p></li><li><p>\u65F6\u95F4\u590D\u6742\u5EA6:O(N)</p></li><li><p>\u7A7A\u95F4\u590D\u6742\u5EA6:O(N)||O(H) H\u662F\u6811\u7684\u9AD8\u5EA6</p></li></ul></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">invertTree</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">root</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>root<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">}</span>
    <span class="token keyword">return</span><span class="token punctuation">{</span>
        <span class="token literal-property property">val</span><span class="token operator">:</span>root<span class="token punctuation">.</span>val<span class="token punctuation">,</span>
        <span class="token literal-property property">left</span><span class="token operator">:</span><span class="token function">invertTree</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token literal-property property">right</span><span class="token operator">:</span><span class="token function">invertTree</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>left<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_100-\u76F8\u540C\u7684\u6811" tabindex="-1"><a class="header-anchor" href="#_100-\u76F8\u540C\u7684\u6811" aria-hidden="true">#</a> 100.\u76F8\u540C\u7684\u6811</h3><ul><li>\u601D\u8DEF\uFF1A <ul><li>\u4E24\u4E2A\u6811\uFF1A\u6839\u8282\u70B9\u7684\u503C\u76F8\u540C\uFF0C\u5DE6\u5B50\u6811\u76F8\u540C</li><li>\u7B26\u5408 \u5206\u3001\u89E3\u3001\u5408 \u7279\u6027</li><li>\u8003\u8651\u5206\u800C\u6CBB\u4E4B</li></ul></li><li>\u6B65\u9AA4\uFF1A <ul><li><p>\u5206\uFF1A\u83B7\u53D6\u4E24\u4E2A\u6811\u7684\u5DE6\u53F3\u5B50\u6811</p></li><li><p>\u89E3\uFF1A\u9012\u5F52\u7684\u5224\u65AD\u4E24\u4E2A\u5DE6\u5B50\u6811\u662F\u5426\u76F8\u540C\uFF0C\u53F3\u5B50\u6811\u662F\u5426\u76F8\u540C</p></li><li><p>\u5408\uFF1A\u5C06\u4E0A\u8FF0\u7ED3\u679C\u5408\u5E76\uFF0C\u5982\u679C\u6839\u8282\u70B9\u7684\u503C\u4E5F\u76F8\u540C\uFF0C\u6811\u5C31\u76F8\u540C</p></li><li><p>\u65F6\u95F4\u590D\u6742\u5EA6:O(N)</p></li><li><p>\u7A7A\u95F4\u590D\u6742\u5EA6:O(N)</p></li></ul></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">isSameTree</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">p<span class="token punctuation">,</span> q</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> <span class="token function-variable function">cur</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">p<span class="token punctuation">,</span> q</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>p <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>q<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">&amp;&amp;</span> q <span class="token operator">&amp;&amp;</span> p<span class="token punctuation">.</span>val <span class="token operator">==</span> q<span class="token punctuation">.</span>val
            <span class="token operator">&amp;&amp;</span> <span class="token function">cur</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>left<span class="token punctuation">,</span> q<span class="token punctuation">.</span>left<span class="token punctuation">)</span>
            <span class="token operator">&amp;&amp;</span> <span class="token function">cur</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>right<span class="token punctuation">,</span> q<span class="token punctuation">.</span>right<span class="token punctuation">)</span>
        <span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token function">cur</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> q<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_101-\u5BF9\u79F0\u4E8C\u53C9\u6811" tabindex="-1"><a class="header-anchor" href="#_101-\u5BF9\u79F0\u4E8C\u53C9\u6811" aria-hidden="true">#</a> 101.\u5BF9\u79F0\u4E8C\u53C9\u6811</h3><ul><li>\u601D\u8DEF\uFF1A <ul><li>\u8F6C\u5316\u4E3A\uFF1A\u5DE6\u53F3\u5B50\u6811\u662F\u5426\u955C\u50CF</li><li>\u5206\u89E3\u4E3A\uFF1A\u68111\u7684\u5DE6\u5B50\u6811\u4E2A\u68112\u7684\u53F3\u5B50\u6811\u662F\u5426\u955C\u50CF\uFF0C\u68111\u7684\u53F3\u5B50\u6811\u548C\u68112\u7684\u53F3\u5B50\u6811\u662F\u5426\u955C\u50CF</li><li>\u8003\u8651\u5206\u800C\u6CBB\u4E4B</li></ul></li><li>\u6B65\u9AA4\uFF1A <ul><li>\u5206\uFF1A\u83B7\u53D6\u4E24\u4E2A\u6811\u7684\u5DE6\u53F3\u5B50\u6811</li><li>\u89E3\uFF1A\u9012\u5F52\u7684\u5224\u65AD\u662F\u5426\u955C\u50CF</li></ul></li></ul><p>\u3001</p><ul><li>\u65F6\u95F4\u590D\u6742\u5EA6:O(N)</li><li>\u7A7A\u95F4\u590D\u6742\u5EA6:O(N)</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">isSymmetric</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">root</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>root<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>
    <span class="token keyword">const</span> <span class="token function-variable function">isMirror</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">l<span class="token punctuation">,</span> r</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>l <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>r<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>l <span class="token operator">&amp;&amp;</span> r <span class="token operator">&amp;&amp;</span> l<span class="token punctuation">.</span>val <span class="token operator">==</span> r<span class="token punctuation">.</span>val
            <span class="token operator">&amp;&amp;</span> <span class="token function">isMirror</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>left<span class="token punctuation">,</span> r<span class="token punctuation">.</span>right<span class="token punctuation">)</span>
            <span class="token operator">&amp;&amp;</span> <span class="token function">isMirror</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>right<span class="token punctuation">,</span> r<span class="token punctuation">.</span>left<span class="token punctuation">)</span>
        <span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token function">isMirror</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>left<span class="token punctuation">,</span> root<span class="token punctuation">.</span>right<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u52A8\u6001\u89C4\u5212" tabindex="-1"><a class="header-anchor" href="#\u52A8\u6001\u89C4\u5212" aria-hidden="true">#</a> \u52A8\u6001\u89C4\u5212</h2><ul><li>\u52A8\u6001\u89C4\u5212\u662F\u7B97\u6CD5\u8BBE\u8BA1\u4E2D\u7684\u4E00\u79CD\u65B9\u6CD5\uFF0C\u7A7A\u95F4\u6362\u65F6\u95F4</li><li>\u5B83\u5C06\u4E00\u4E2A\u95EE\u9898\u5206\u89E3\u4E3A<b style="color:red;">\u76F8\u4E92\u91CD\u53E0</b>\u7684\u5B50\u95EE\u9898\uFF0C\u901A\u8FC7\u53CD\u590D\u6C42\u89E3\u5B50\u95EE\u9898\uFF0C\u6765\u89E3\u51B3\u539F\u6765\u7684\u95EE\u9898\u3002</li><li>\u76F8\u6BD4\u5206\u800C\u6CBB\u4E4B\u7684\u5B50\u95EE\u9898\u4E92\u4E0D\u5E72\u6270\u3001\u72EC\u7ACB\u7684\uFF0C\u52A8\u6001\u89C4\u5212\u7684\u5B50\u95EE\u9898\u662F\u76F8\u4E92\u91CD\u53E0</li></ul><h4 id="\u573A\u666F-1" tabindex="-1"><a class="header-anchor" href="#\u573A\u666F-1" aria-hidden="true">#</a> \u573A\u666F</h4><ul><li>\u6590\u6CE2\u90A3\u5951\u6570\u5217\uFF1A0 1 1 2 3 5 8 13 21 34 <ul><li>\u5B9A\u4E49\u5B50\u95EE\u9898\uFF1AF(n)=F(n-1)+F(n-2)</li><li>\u53CD\u590D\u6267\u884C\uFF1A\u4ECE2\u6267\u884C\u5230n\uFF0C\u6267\u884C\u4E0A\u8FF0\u516C\u5F0F</li></ul></li></ul><h3 id="\u52A8\u6001\u89C4\u5212\u516C\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u52A8\u6001\u89C4\u5212\u516C\u5F0F" aria-hidden="true">#</a> \u52A8\u6001\u89C4\u5212\u516C\u5F0F</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">dp</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> arrLen <span class="token operator">=</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arrLen<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> arrLen<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// if (arr[i] &gt; sarr[i-j]+xxx){</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> arr<span class="token punctuation">[</span>i <span class="token operator">-</span> j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;\u91CD\u65B0\u8D4B\u503C&quot;</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_01\u80CC\u5305\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#_01\u80CC\u5305\u95EE\u9898" aria-hidden="true">#</a> 01\u80CC\u5305\u95EE\u9898</h3><p>\u7ED9\u4F60\u4E00\u4E2A\u53EF\u88C5\u8F7D\u91CD\u91CF\u4E3AW\u7684\u80CC\u5305\u548CN\u4E2A\u7269\u54C1\uFF0C\u6BCF\u4E2A\u7269\u54C1\u6709\u91CD\u91CF\u548C\u4EF7\u503C\u4E24\u4E2A\u5C5E\u6027\u3002\u5176\u4E2D\u7B2Ci\u4E2A\u7269\u54C1\u7684\u91CD\u91CF\u4E3Awt[i]\uFF0C\u4EF7\u503C\u4E3Aval[i]\uFF0C\u73B0\u5728\u8BA9\u4F60\u7528\u8FD9\u4E2A\u80CC\u5305\u88C5\u7269\u54C1\uFF0C\u6700\u591A\u80FD\u88C5\u7684\u4EF7\u503C\u662F\u591A\u5C11\uFF1F</p><p>\u4E3E\u4E2A\u7B80\u5355\u7684\u4F8B\u5B50\uFF0C\u8F93\u5165\u5982\u4E0B\uFF1A</p><p>N = 3(3\u4E2A\u7269\u54C1), W = 4(\u80CC\u5305\u5BB9\u91CF4) wt = [2, 1, 3] val = [4, 2, 3] \u7B97\u6CD5\u8FD4\u56DE 6\uFF0C\u9009\u62E9\u524D\u4E24\u4EF6\u7269\u54C1\u88C5\u8FDB\u80CC\u5305\uFF0C\u603B\u91CD\u91CF 3 \u5C0F\u4E8EW\uFF0C\u53EF\u4EE5\u83B7\u5F97\u6700\u5927\u4EF7\u503C 6\u3002</p><p>\u8FD9\u662F\u4E00\u4E2A\u5178\u578B\u7684\u52A8\u6001\u89C4\u5212\u95EE\u9898\u3002 \u8FD9\u4E2A\u9898\u76EE\u4E2D\u7684\u7269\u54C1\u4E0D\u53EF\u4EE5\u5206\u5272\uFF0C\u8981\u4E48\u88C5\u8FDB\u5305\u91CC\uFF0C\u8981\u4E48\u4E0D\u88C5\uFF0C\u4E0D\u80FD\u8BF4\u5207\u6210\u4E24\u5757\u88C5\u4E00\u534A\u3002\u8FD9\u5C31\u662F 0-1 \u80CC\u5305\u8FD9\u4E2A\u540D\u8BCD\u7684\u6765\u5386\u3002</p><h3 id="\u52A8\u6001\u89C4\u5212\u89E3\u9898\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u52A8\u6001\u89C4\u5212\u89E3\u9898\u601D\u8DEF" aria-hidden="true">#</a> \u52A8\u6001\u89C4\u5212\u89E3\u9898\u601D\u8DEF</h3><p>\u4E00\u3001\u660E\u786E\u3010\u72B6\u6001\u3011\u548C\u3010\u9009\u62E9\u3011</p><ol><li><p>\u72B6\u6001 \u5982\u4F55\u624D\u80FD\u63CF\u8FF0\u4E00\u4E2A\u80CC\u5305\u95EE\u9898\uFF1F \u53EA\u8981\u7ED9\u5B9A\u51E0\u4E2A\u53EF\u9009\u7269\u54C1\u548C\u4E00\u4E2A\u80CC\u5305\u7684\u5BB9\u91CF\u9650\u5236\uFF0C\u5C31\u5F62\u6210\u4E86\u4E00\u4E2A\u80CC\u5305\u95EE\u9898\u3002 \u6240\u4EE5\u72B6\u6001\u6709\u4E24\u4E2A\uFF0C\u5C31\u662F\u300C\u80CC\u5305\u7684\u5BB9\u91CF\u300D\u548C\u300C\u53EF\u9009\u62E9\u7684\u7269\u54C1\u300D\u3002</p></li><li><p>\u9009\u62E9 \u5BF9\u4E8E\u6BCF\u4EF6\u7269\u54C1\uFF0C\u4F60\u80FD\u9009\u62E9\u4EC0\u4E48\uFF1F\u9009\u62E9\u5C31\u662F\u300C\u88C5\u8FDB\u80CC\u5305\u300D\u6216\u8005\u300C\u4E0D\u88C5\u8FDB\u80CC\u5305\u300D\u3002</p></li><li><p>\u5957\u7528\u6846\u67B6</p></li></ol><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>for \u72B6\u60011 in \u72B6\u60011\u7684\u6240\u6709\u53D6\u503C\uFF1A
    for \u72B6\u60012 in \u72B6\u60012\u7684\u6240\u6709\u53D6\u503C\uFF1A
        dp[\u72B6\u60011][\u72B6\u60012] = \u62E9\u4F18(\u9009\u62E91\uFF0C\u9009\u62E92...)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E8C\u3001\u660E\u786Edp\u6570\u7EC4\u7684\u5B9A\u4E49</p><p>dp\u6570\u7EC4\u662F\u4EC0\u4E48\uFF1F\u5176\u5B9E\u5C31\u662F\u63CF\u8FF0\u95EE\u9898\u5C40\u9762\u7684\u4E00\u4E2A\u6570\u7EC4\u3002\u6362\u53E5\u8BDD\u8BF4\uFF0C\u6211\u4EEC\u521A\u624D\u660E\u786E\u95EE\u9898\u6709\u4EC0\u4E48\u300C\u72B6\u6001\u300D\uFF0C\u73B0\u5728\u9700\u8981\u7528dp\u6570\u7EC4\u628A\u72B6\u6001\u8868\u793A\u51FA\u6765\u3002</p><p>\u9996\u5148\u770B\u770B\u521A\u624D\u627E\u5230\u7684\u300C\u72B6\u6001\u300D\uFF0C\u6709\u4E24\u4E2A\uFF0C\u4E5F\u5C31\u662F\u8BF4\u6211\u4EEC\u9700\u8981\u4E00\u4E2A\u4E8C\u7EF4dp\u6570\u7EC4\uFF0C\u4E00\u7EF4\u8868\u793A\u53EF\u9009\u62E9\u7684\u7269\u54C1\uFF0C\u4E00\u7EF4\u8868\u793A\u80CC\u5305\u7684\u5BB9\u91CF\u3002</p><p>dp[i][w]\u7684\u5B9A\u4E49\u5982\u4E0B\uFF1A\u5BF9\u4E8E\u524Di\u4E2A\u7269\u54C1\uFF0C\u5F53\u524D\u80CC\u5305\u7684\u5BB9\u91CF\u4E3Aw\uFF0C\u8FD9\u79CD\u60C5\u51B5\u4E0B\u53EF\u4EE5\u88C5\u7684\u6700\u5927\u4EF7\u503C\u662Fdp[i][w]\u3002</p><p>dp[0][w] = 0</p><p>dp[i][0] = 0</p><p>\u6BD4\u5982\u8BF4\uFF0C\u5982\u679C dp[3][5] = 6\uFF0C\u5176\u542B\u4E49\u4E3A\uFF1A\u5BF9\u4E8E\u7ED9\u5B9A\u7684\u4E00\u7CFB\u5217\u7269\u54C1\u4E2D\uFF0C\u82E5\u53EA\u5BF9\u524D 3 \u4E2A\u7269\u54C1\u8FDB\u884C\u9009\u62E9\uFF0C\u5F53\u80CC\u5305\u5BB9\u91CF\u4E3A 5 \u65F6\uFF0C\u6700\u591A\u53EF\u4EE5\u88C5\u4E0B\u7684\u4EF7\u503C\u4E3A 6\u3002</p><p>\u4E3A\u4EC0\u4E48\u8981\u8FD9\u4E48\u5B9A\u4E49\uFF1F\u4FBF\u4E8E\u72B6\u6001\u8F6C\u79FB\u3002</p><p>\u6839\u636E\u8FD9\u4E2A\u5B9A\u4E49\uFF0C\u6211\u4EEC\u60F3\u6C42\u7684\u6700\u7EC8\u7B54\u6848\u5C31\u662Fdp[N][W]\u3002 base case \u5C31\u662Fdp[0][..] = dp[..][0] = 0\uFF0C\u56E0\u4E3A\u6CA1\u6709\u7269\u54C1\u6216\u8005\u80CC\u5305\u6CA1\u6709\u7A7A\u95F4\u7684\u65F6\u5019\uFF0C\u80FD\u88C5\u7684\u6700\u5927\u4EF7\u503C\u5C31\u662F 0\u3002</p><p>\u90A3\u4E48\u7EC6\u5316\u4E0A\u9762\u7684\u89E3\u9898\u6846\u67B6\u5C31\u662F\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>int dp[N+1][W+1]
dp[0][..] = 0
dp[..][0] = 0

for i in [1..N]:
    for w in [1..W]:
        dp[i][w] = max(
            \u628A\u7269\u54C1 i \u88C5\u8FDB\u80CC\u5305,
            \u4E0D\u628A\u7269\u54C1 i \u88C5\u8FDB\u80CC\u5305
        )
return dp[N][W]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E09\u3001\u72B6\u6001\u8F6C\u79FB\u65B9\u7A0B\u600E\u4E48\u5199\uFF1F</p><p>\u7B80\u5355\u8BF4\u5C31\u662F\uFF0C\u4E0A\u9762\u4F2A\u4EE3\u7801\u4E2D\u300C\u628A\u7269\u54C1i\u88C5\u8FDB\u80CC\u5305\u300D\u548C\u300C\u4E0D\u628A\u7269\u54C1i\u88C5\u8FDB\u80CC\u5305\u300D\u600E\u4E48\u7528\u4EE3\u7801\u4F53\u73B0\u51FA\u6765\u5462\uFF1F</p><p>\u8FD9\u4E00\u6B65\u8981\u7ED3\u5408\u5BF9dp\u6570\u7EC4\u7684\u5B9A\u4E49\u548C\u6211\u4EEC\u7684\u7B97\u6CD5\u903B\u8F91\u6765\u5206\u6790\uFF1A</p><p>\u5148\u91CD\u7533\u4E00\u4E0B\u521A\u624D\u6211\u4EEC\u7684dp\u6570\u7EC4\u7684\u5B9A\u4E49\uFF1A</p><p>dp[i][w]\u8868\u793A\uFF1A\u5BF9\u4E8E\u524Di\u4E2A\u7269\u54C1\uFF0C\u5F53\u524D\u80CC\u5305\u7684\u5BB9\u91CF\u4E3Aw\u65F6\uFF0C\u8FD9\u79CD\u60C5\u51B5\u4E0B\u53EF\u4EE5\u88C5\u4E0B\u7684\u6700\u5927\u4EF7\u503C\u662Fdp[i][w]\u3002</p><p>\u5982\u679C\u4F60\u6CA1\u6709\u628A\u8FD9\u7B2Ci\u4E2A\u7269\u54C1\u88C5\u5165\u80CC\u5305\uFF0C\u90A3\u4E48\u5F88\u663E\u7136\uFF0C\u6700\u5927\u4EF7\u503Cdp[i][w]\u5E94\u8BE5\u7B49\u4E8Edp[i-1][w]\u3002\u4F60\u4E0D\u88C5\u561B\uFF0C\u90A3\u5C31\u7EE7\u627F\u4E4B\u524D\u7684\u7ED3\u679C\u3002</p><p>\u5982\u679C\u4F60\u628A\u8FD9\u7B2Ci\u4E2A\u7269\u54C1\u88C5\u5165\u4E86\u80CC\u5305\uFF0C\u90A3\u4E48dp[i][w]\u5E94\u8BE5\u7B49\u4E8Edp[i-1][w-wt[i-1]] + val[i-1]\u3002</p><p>\u9996\u5148\uFF0C\u7531\u4E8Ei\u662F\u4ECE 1 \u5F00\u59CB\u7684\uFF0C\u6240\u4EE5\u5BF9val\u548Cwt\u7684\u53D6\u503C\u662Fi-1\u3002</p><p>\u800Cdp[i-1][w-wt[i-1]]\u4E5F\u5F88\u597D\u7406\u89E3\uFF1A\u4F60\u5982\u679C\u60F3\u88C5\u7B2Ci\u4E2A\u7269\u54C1\uFF0C\u4F60\u600E\u4E48\u8BA1\u7B97\u8FD9\u65F6\u5019\u7684\u6700\u5927\u4EF7\u503C\uFF1F\u6362\u53E5\u8BDD\u8BF4\uFF0C\u5728\u88C5\u7B2Ci\u4E2A\u7269\u54C1\u7684\u524D\u63D0\u4E0B\uFF0C\u80CC\u5305\u80FD\u88C5\u7684\u6700\u5927\u4EF7\u503C\u662F\u591A\u5C11\uFF1F</p><p>\u663E\u7136\uFF0C\u4F60\u5E94\u8BE5\u5BFB\u6C42\u5269\u4F59\u91CD\u91CFw-wt[i-1]\u9650\u5236\u4E0B\u80FD\u88C5\u7684\u6700\u5927\u4EF7\u503C\uFF0C\u52A0\u4E0A\u7B2Ci\u4E2A\u7269\u54C1\u7684\u4EF7\u503Cval[i-1]\uFF0C\u8FD9\u5C31\u662F\u88C5\u7B2Ci\u4E2A\u7269\u54C1\u7684\u524D\u63D0\u4E0B\uFF0C\u80CC\u5305\u53EF\u4EE5\u88C5\u7684\u6700\u5927\u4EF7\u503C\u3002</p><p>\u7EFC\u4E0A\u5C31\u662F\u4E24\u79CD\u9009\u62E9\uFF0C\u6211\u4EEC\u90FD\u5DF2\u7ECF\u5206\u6790\u5B8C\u6BD5\uFF0C\u4E5F\u5C31\u662F\u5199\u51FA\u6765\u4E86\u72B6\u6001\u8F6C\u79FB\u65B9\u7A0B\uFF0C\u53EF\u4EE5\u8FDB\u4E00\u6B65\u7EC6\u5316\u4EE3\u7801\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>for i in [1..N]:
    for w in [1..W]:
        dp[i][w] = max(
            dp[i-1][w],
            dp[i-1][w - wt[i-1]] + val[i-1]
        )
return dp[N][W]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u56DB\u3001\u628A\u4F2A\u4EE3\u7801\u8F6C\u6362\u4E3A\u4EE3\u7801</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>
<span class="token doc-comment comment">/**
* 0-1\u80CC\u5305\u95EE\u9898
* <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Number<span class="token punctuation">}</span></span> <span class="token parameter">W</span> \u80CC\u5305\u5BB9\u91CF
* <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Number<span class="token punctuation">}</span></span> <span class="token parameter">N</span> \u7269\u54C1\u603B\u6570
* <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Array<span class="token punctuation">}</span></span> <span class="token parameter">wt</span> \u7269\u54C1\u91CD\u91CF\u6570\u7EC4
* <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Array<span class="token punctuation">}</span></span> <span class="token parameter">val</span> \u7269\u54C1\u4EF7\u503C\u6570\u7EC4
* <span class="token keyword">@returns</span> Number \u80CC\u5305\u80FD\u88C5\u7684\u6700\u5927\u4EF7\u503C
*/</span>
<span class="token keyword">function</span> <span class="token function">knapsack</span><span class="token punctuation">(</span><span class="token parameter"><span class="token constant">W</span><span class="token punctuation">,</span> <span class="token constant">N</span><span class="token punctuation">,</span> wt <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> val <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u521D\u59CB\u5316N+1\u884C, M+1\u5217\u7684\u4E8C\u7EF4\u6570\u7EC4, base case \u5DF2\u521D\u59CB\u5316</span>
    <span class="token keyword">const</span> dp <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token constant">N</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token constant">W</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token constant">N</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> w <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> w <span class="token operator">&lt;=</span> <span class="token constant">W</span><span class="token punctuation">;</span> w<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>w <span class="token operator">-</span> wt<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u5F53\u524D\u80CC\u5305\u5BB9\u91CF\u88C5\u4E0D\u4E0B\uFF0C\u53EA\u80FD\u9009\u62E9\u4E0D\u88C5\u5165\u80CC\u5305</span>
                dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>w<span class="token punctuation">]</span> <span class="token operator">=</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>w<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u88C5\u5165\u6216\u8005\u4E0D\u88C5\u5165\u80CC\u5305\uFF0C\u62E9\u4F18</span>
                dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>w<span class="token punctuation">]</span> <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>w <span class="token operator">-</span> wt<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">+</span> val<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                    dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>w<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> dp<span class="token punctuation">[</span><span class="token constant">N</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token constant">W</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token constant">W</span> <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token constant">N</span> <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> wt <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> val <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">knapsack</span><span class="token punctuation">(</span><span class="token constant">W</span><span class="token punctuation">,</span> <span class="token constant">N</span><span class="token punctuation">,</span> wt<span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_70-\u722C\u697C\u68AF" tabindex="-1"><a class="header-anchor" href="#_70-\u722C\u697C\u68AF" aria-hidden="true">#</a> 70.\u722C\u697C\u68AF</h3><p>\u601D\u8DEF\uFF1A</p><ul><li>\u722C\u5230\u7B2Cn\u9636\u53EF\u4EE5\u518D\u7B2Cn-1\u9636\u722C1\u4E2A\u53F0\u9636\uFF0C\u6216\u8005\u5728\u7B2Cn-2\u9636\u722C2\u4E2A\u53F0\u9636</li><li>F(n)=F(n-1)+F(n-2) \u6B65\u9AA4\uFF1A</li><li>\u5B9A\u4E49\u5B50\u95EE\u9898 F(n)=F(n-1)+F(n-2)</li><li>\u4ECE2\u5FAA\u73AF\u5230n\uFF0C\u6267\u884C\u4E0A\u8FF0\u516C\u5F0F</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">climbStairs</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>n<span class="token operator">&lt;</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">}</span>
    <span class="token keyword">const</span> dp<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>dp<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span>dp<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> dp<span class="token punctuation">[</span>n<span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">climbStairs</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>n<span class="token operator">&lt;</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">}</span>
    <span class="token keyword">const</span> menu<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
    menu<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span>
    menu<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">2</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        menu<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>menu<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">+</span>menu<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> menu<span class="token punctuation">[</span>n<span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_198-\u6253\u5BB6\u52AB\u820D" tabindex="-1"><a class="header-anchor" href="#_198-\u6253\u5BB6\u52AB\u820D" aria-hidden="true">#</a> 198.\u6253\u5BB6\u52AB\u820D</h3><p>\u601D\u8DEF\uFF1A</p><ul><li>f(k)=\u4ECE\u524Dk\u4E2A\u623F\u5C4B\u4E2D\u80FD\u5077\u7A83\u5230\u7684\u4E2D\u6700\u5927\u6570\u989D</li><li>Ak= \u7B2Ck\u4E2A\u623F\u5C4B\u7684\u94B1\u6570</li><li>f(k)=max(f(k-2)+Ak,f(k-1))</li><li>\u8003\u8651\u4F7F\u7528\u52A8\u6001\u89C4\u5212</li><li>\u65F6\u95F4\u590D\u6742\u5EA6 O(n)</li><li>\u7A7A\u95F4\u590D\u6742\u5EA6 O(n)</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">rob</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">nums</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>nums<span class="token punctuation">.</span>length<span class="token operator">===</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">return</span> <span class="token number">0</span>
    <span class="token keyword">let</span> dp <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span>nums<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">+</span>nums<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>dp<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> dp<span class="token punctuation">[</span>nums<span class="token punctuation">.</span>length<span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u8D2A\u5FC3\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u8D2A\u5FC3\u7B97\u6CD5" aria-hidden="true">#</a> \u8D2A\u5FC3\u7B97\u6CD5</h2><p>\u671F\u76FC\u901A\u8FC7\u6BCF\u4E2A\u9636\u6BB5\u7684\u5C40\u90E8\u6700\u4F18\u9009\u62E9\uFF0C\u4ECE\u800C\u8FBE\u5230\u5168\u5C40\u7684\u6700\u4F18</p><p>\u7ED3\u679C\u4E0D\u4E00\u5B9A\u662F\u6700\u4F18</p><p>\u8D2A\u5FC3\u7B97\u6CD5\u5176\u5B9E\u53EF\u4EE5\u8BA4\u4E3A\u662F dp \u95EE\u9898\u7684\u4E00\u4E2A\u7279\u4F8B, \u9664\u4E86\u52A8\u6001\u89C4\u5212\u7684\u5404\u79CD\u7279\u5F81\u5916, \u8D2A\u5FC3\u7B97\u6CD5\u8FD8\u9700\u8981\u6EE1\u8DB3&quot;\u8D2A\u5FC3\u9009\u62E9\u6027\u8D28&quot;, \u5F53\u7136\u6548\u7387\u4E5F\u6BD4\u52A8\u6001\u89C4\u5212\u8981\u9AD8\u3002</p><h3 id="_455-\u5206\u997C\u5E72" tabindex="-1"><a class="header-anchor" href="#_455-\u5206\u997C\u5E72" aria-hidden="true">#</a> 455.\u5206\u997C\u5E72</h3><p>\u601D\u8DEF\uFF1A \u5C40\u90E8\u6700\u4F18:\u65E2\u80FD\u6EE1\u8DB3\u5B69\u5B50\uFF0C\u8FD8\u6D88\u8017\u6700\u5C11 \u5148\u5C06\u8F83\u5C0F\u7684\u997C\u5E72\u5206\u7ED9\u80C3\u53E3\u6700\u5C0F\u7684\u5B69\u5B50</p><p>\u6B65\u9AA4\uFF1A \u5BF9\u997C\u5E72\u6570\u7EC4\u548C\u80C3\u53E3\u6570\u7EC4\u8FDB\u884C\u5347\u5E8F\u6392\u5E8F \u904D\u5386\u997C\u5E72\u6570\u7EC4\uFF0C\u627E\u5230\u80FD\u6EE1\u8DB3\u7B2C\u4E00\u4E2A\u5B69\u5B50\uFF08\u80C3\u53E3\u6700\u5C0F\u7684\u5B69\uFF09\u7684\u997C\u5E72 \u7136\u540E\u7EE7\u7EED\u904D\u5386\u8FD9\u4E2A\u997C\u5E72\uFF0C\u627E\u5230\u6EE1\u8DB3\u7B2C 2\u30013\u3001...\u3001n \u4E2A\u5B69\u5B50\u7684\u997C\u5E72</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">findContentChildren</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">g<span class="token punctuation">,</span> s</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> <span class="token function-variable function">sortFun</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> a <span class="token operator">-</span> b<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  g<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>sortFun<span class="token punctuation">)</span><span class="token punctuation">;</span>
  s<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>sortFun<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> num <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> s<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;=</span> g<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      num<span class="token operator">++</span><span class="token punctuation">;</span>
      g<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// s.forEach((item)=&gt;{</span>
  <span class="token comment">//     if(item&gt;=g[num]){</span>
  <span class="token comment">//         num++</span>
  <span class="token comment">//     }</span>
  <span class="token comment">// })</span>
  <span class="token keyword">return</span> num<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A n*logn</li><li>\u7A7A\u95F4\u590D\u6742\u5EA6\u4E3A O1</li></ul><h3 id="_122-\u4E70\u5356\u80A1\u7968\u7684\u6700\u4F73\u65F6\u673A-ii" tabindex="-1"><a class="header-anchor" href="#_122-\u4E70\u5356\u80A1\u7968\u7684\u6700\u4F73\u65F6\u673A-ii" aria-hidden="true">#</a> 122.\u4E70\u5356\u80A1\u7968\u7684\u6700\u4F73\u65F6\u673A \u2161</h3><p>\u601D\u8DEF\uFF1A \u4E0A\u5E1D\u89C6\u89D2\uFF0C\u77E5\u9053\u672A\u6765\u4EF7\u683C \u5C40\u90E8\u6700\u4F18\uFF1A\u89C1\u597D\u5C31\u6536\uFF0C\u89C1\u5DEE\u5C31\u4E0D\u52A8\uFF0C\u4E0D\u505A\u4EFB\u4F55\u6253\u7B97</p><p>\u6B65\u9AA4\uFF1A \u65B0\u5EFA\u4E00\u4E2A\u53D8\u91CF\uFF0C\u7528\u6765\u7EDF\u8BA1\u603B\u5229\u6DA6 \u904D\u5386\u4EF7\u683C\u6570\u7EC4\uFF0C\u5982\u679C\u5F53\u524D\u4EF7\u683C\u6BD4\u6628\u5929\u9AD8\uFF0C\u5C31\u5728\u6628\u5929\u5356\u4E70\uFF0C\u4ECA\u5929\u5356\uFF0C\u5426\u5219\u5C31\u4E0D\u4EA4\u6613 \u904D\u5386\u7ED3\u675F\u540E\uFF0C\u8FD4\u56DE\u5229\u6DA6\u4E4B\u548C</p><p>code:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">maxProfit</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">prives</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> num <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> prives<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>prives<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;</span> prives<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      num <span class="token operator">+=</span> prives<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> prives<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> num<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A On</li><li>\u7A7A\u95F4\u590D\u6742\u5EA6\u4E3A O1</li></ul><h3 id="\u533A\u95F4\u8C03\u5EA6\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#\u533A\u95F4\u8C03\u5EA6\u95EE\u9898" aria-hidden="true">#</a> \u533A\u95F4\u8C03\u5EA6\u95EE\u9898</h3><p>\u6765\u770B\u4E00\u4E2A\u7ECF\u5178\u7684\u8D2A\u5FC3\u7B97\u6CD5\u95EE\u9898 Interval Scheduling \u533A\u95F4\u8C03\u5EA6.</p><p>\u6709\u8BB8\u591A[start, end]\u7684\u95ED\u533A\u95F4, \u8BF7\u8BBE\u8BA1\u4E00\u4E2A\u7B97\u6CD5, \u7B97\u51FA\u8FD9\u4E9B\u533A\u95F4\u4E2D, \u6700\u591A\u6709\u51E0\u4E2A\u4E92\u4E0D\u76F8\u4EA4\u7684\u533A\u95F4\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">intervalSchedule</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">intvs</span><span class="token operator">:</span> number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token comment">// \u6BD4\u5982intvs = [[1,3], [2,4], [3,6]]</span>
<span class="token comment">// \u8FD9\u4E9B\u533A\u95F4\u6700\u591A\u6709\u4E24\u4E2A\u533A\u95F4\u4E92\u4E0D\u76F8\u4EA4, \u5373 [1,3], [3,6], intervalSchedule\u51FD\u6570\u6B64\u65F6\u5E94\u8BE5\u8FD4\u56DE2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E2A\u95EE\u9898\u5728\u73B0\u5B9E\u4E2D\u5176\u5B9E\u6709\u5F88\u591A\u5E94\u7528\u573A\u666F, \u6BD4\u5982\u4F60\u4ECA\u5929\u6709\u597D\u51E0\u4E2A\u6D3B\u52A8\u53EF\u4EE5\u53C2\u52A0, \u6BCF\u4E2A\u6D3B\u52A8\u533A\u95F4\u7528[start, end]\u8868\u793A\u5F00\u59CB\u548C\u7ED3\u675F\u65F6\u95F4, \u8BF7\u95EE\u4F60\u4ECA\u5929\u6700\u591A\u80FD\u53C2\u52A0\u51E0\u4E2A\u6D3B\u52A8\uFF1F</p><h3 id="\u8D2A\u5FC3\u6C42\u89E3" tabindex="-1"><a class="header-anchor" href="#\u8D2A\u5FC3\u6C42\u89E3" aria-hidden="true">#</a> \u8D2A\u5FC3\u6C42\u89E3</h3><p>\u5927\u5BB6\u53EF\u4EE5\u5148\u60F3\u4E00\u60F3\uFF0C\u6709\u4EC0\u4E48\u601D\u8DEF\uFF1F</p><ol><li>\u53EF\u4EE5\u6BCF\u6B21\u9009\u62E9\u53EF\u9009\u533A\u95F4\u4E2D\u5F00\u59CB\u6700\u65E9\u7684\u90A3\u4E2A\uFF1F</li></ol><p>\u4E0D\u884C, \u56E0\u4E3A\u53EF\u80FD\u6709\u7684\u533A\u95F4\u5F00\u59CB\u5F88\u65E9, \u7ED3\u675F\u5F88\u665A, \u6BD4\u5982[0,10], \u4F7F\u6211\u4EEC\u9519\u8FC7\u4E86\u5F88\u591A\u77ED\u533A\u95F4\u6BD4\u5982[1,2],[2,3]</p><ol start="2"><li>\u53EF\u4EE5\u6BCF\u6B21\u9009\u62E9\u53EF\u9009\u533A\u95F4\u4E2D\u6700\u77ED\u7684\u90A3\u4E2A\uFF1F</li></ol><p>\u4E0D\u884C, \u76F4\u63A5\u770B\u4E0A\u9762\u8FD9\u4E2A\u4F8B\u5B50[[1,3], [2,4], [3,6]], \u8FD9\u6837\u7684\u8BDD\u4F1A\u9009\u62E9\u51FA [1, 3], [2, 4], \u5E76\u4E0D\u80FD\u4FDD\u8BC1\u4ED6\u4EEC\u4E0D\u76F8\u4EA4</p><h4 id="\u6B63\u786E\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u6B63\u786E\u601D\u8DEF" aria-hidden="true">#</a> \u6B63\u786E\u601D\u8DEF</h4><ol><li>\u4ECE\u53EF\u9009\u533A\u95F4 intvs \u91CC, \u9009\u62E9\u4E00\u4E2A end \u7ED3\u675F\u65F6\u95F4 \u6700\u5C0F\u7684\u533A\u95F4 x</li><li>\u628A\u6240\u6709\u4E0E x \u76F8\u4EA4\u7684\u533A\u95F4\u4ECE intvs \u4E2D\u5254\u9664</li><li>\u91CD\u590D 1,2, \u76F4\u5230 intvs \u4E3A\u7A7A, \u4E4B\u524D\u9009\u51FA\u7684\u5404\u79CD\u533A\u95F4 x\uFF0C \u5C31\u662F\u6211\u4EEC\u8981\u6C42\u7684\u7ED3\u679C</li></ol><p>\u628A\u6574\u4E2A\u601D\u8DEF\u8F6C\u6362\u6210\u4EE3\u7801\u7684\u8BDD, \u56E0\u4E3A\u6211\u4EEC\u8981\u9009\u51FA end \u6700\u5C0F\u7684\u533A\u95F4, \u6240\u4EE5\u6211\u4EEC\u53EF\u4EE5\u5148\u5BF9\u533A\u95F4\u6839\u636E end \u5347\u5E8F\u6392\u5E8F.</p><ol><li>\u9009\u51FA end \u6700\u5C0F\u7684\u533A\u95F4</li></ol><p>\u7531\u4E8E\u6211\u4EEC\u5DF2\u7ECF\u6392\u8FC7\u5E8F\u4E86, \u6240\u4EE5\u76F4\u63A5\u9009\u62E9\u7B2C\u4E00\u4E2A\u533A\u95F4\u5373\u53EF</p><ol start="2"><li>\u5254\u9664\u4E0E x \u76F8\u4EA4\u7684\u533A\u95F4</li></ol><p>\u8FD9\u4E00\u6B65\u5C31\u6CA1\u7B2C\u4E00\u6B65\u90A3\u4E48\u7B80\u5355\u4E86, \u8FD9\u91CC\u5EFA\u8BAE\u5927\u5BB6\u753B\u4E2A\u56FE\u770B\u770B</p><ul><li>\u4EE3\u7801\u5982\u4E0B</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u6709\u8BB8\u591A[start, end]\u7684\u95ED\u533A\u95F4, \u8BF7\u8BBE\u8BA1\u4E00\u4E2A\u7B97\u6CD5, \u7B97\u51FA\u8FD9\u4E9B\u533A\u95F4\u4E2D, \u6700\u591A\u6709\u51E0\u4E2A\u4E92\u4E0D\u76F8\u4EA4\u7684\u533A\u95F4\u3002</span>
<span class="token comment">// \u6BD4\u5982intvs = [[1,3], [2,4], [3,6]]</span>
<span class="token comment">// \u8FD9\u4E9B\u533A\u95F4\u6700\u591A\u6709\u4E24\u4E2A\u533A\u95F4\u4E92\u4E0D\u76F8\u4EA4, \u5373 [1,3], [3,6], intervalSchedule\u51FD\u6570\u6B64\u65F6\u5E94\u8BE5\u8FD4\u56DE2</span>

<span class="token keyword">function</span> <span class="token function">intervalSchedule</span><span class="token punctuation">(</span><span class="token parameter">intvs</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>intvs<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> sortArr <span class="token operator">=</span> intvs<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> b<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> count <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">//\u533A\u95F4</span>
  <span class="token keyword">let</span> xEnd <span class="token operator">=</span> sortArr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">//\u62FF\u5230\u7B2C\u4E00\u4E2A\u533A\u95F4\u7684\u7ED3\u675F\u533A\u95F4</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> sortArr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>sortArr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&lt;=</span> xEnd<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      count<span class="token operator">++</span><span class="token punctuation">;</span>
      xEnd <span class="token operator">=</span> sortArr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> count<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>
  <span class="token function">intervalSchedule</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u770B\u4E00\u4E0B\u533A\u95F4\u8C03\u5EA6.js</p><h3 id="\u533A\u95F4\u8C03\u5EA6\u7B97\u6CD5\u7684\u5E94\u7528" tabindex="-1"><a class="header-anchor" href="#\u533A\u95F4\u8C03\u5EA6\u7B97\u6CD5\u7684\u5E94\u7528" aria-hidden="true">#</a> \u533A\u95F4\u8C03\u5EA6\u7B97\u6CD5\u7684\u5E94\u7528</h3><h3 id="_435-\u65E0\u91CD\u53E0\u533A\u95F4" tabindex="-1"><a class="header-anchor" href="#_435-\u65E0\u91CD\u53E0\u533A\u95F4" aria-hidden="true">#</a> 435. \u65E0\u91CD\u53E0\u533A\u95F4</h3><ul><li>\u89E3\u7B54</li></ul><p>\u521A\u624D\u54B1\u4EEC\u5DF2\u7ECF\u627E\u5230\u4E86\u6700\u591A\u6709\u51E0\u4E2A\u4E92\u4E0D\u76F8\u4EA4\u7684\u533A\u95F4\u6570 n, \u90A3\u4E48\u603B\u6570\u51CF\u53BB n \u5C31\u53EF\u4EE5\u4E86~</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">eraseOverlapIntervals</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">intervals</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>intervals<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">let</span> sortArray <span class="token operator">=</span> intervals<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> b<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>

  <span class="token keyword">let</span> xEnd <span class="token operator">=</span> sortArray<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> item <span class="token keyword">of</span> intervals<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6CE8\u610F, \u8FD9\u91CC\u9898\u76EE\u8BF4\u4E86\u533A\u95F4 [1,2] \u548C [2,3] \u7684\u8FB9\u754C\u76F8\u4E92\u201C\u63A5\u89E6\u201D\uFF0C\u4F46\u6CA1\u6709\u76F8\u4E92\u91CD\u53E0, \u6240\u4EE5\u5E94\u8BE5\u662Fitem[0] &gt;= xEnd</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&gt;=</span> xEnd<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      xEnd <span class="token operator">=</span> item<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      count<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> intervals<span class="token punctuation">.</span>length <span class="token operator">-</span> count<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-\u7528\u6700\u5C11\u7684\u7BAD\u5934\u5C04\u7206\u6C14\u7403" tabindex="-1"><a class="header-anchor" href="#_2-\u7528\u6700\u5C11\u7684\u7BAD\u5934\u5C04\u7206\u6C14\u7403" aria-hidden="true">#</a> 2. \u7528\u6700\u5C11\u7684\u7BAD\u5934\u5C04\u7206\u6C14\u7403</h3><ul><li>\u89E3\u7B54</li></ul><p>\u8FD9\u4E2A\u95EE\u9898\u548C\u533A\u95F4\u8C03\u5EA6\u7B97\u6CD5\u53C8\u662F\u975E\u5E38\u7684\u7C7B\u4F3C, \u5927\u5BB6\u7A0D\u5FAE\u8F6C\u6362\u4E00\u4E0B\u601D\u8DEF\u5373\u53EF\u3002</p><p>\u5982\u679C\u6700\u591A\u6709 n \u4E2A\u4E0D\u91CD\u53E0\u7684\u7A7A\u95F4, \u90A3\u4E48\u5C31\u81F3\u5C11\u9700\u8981 n \u4E2A\u7BAD\u5934\u7A7F\u900F\u6240\u6709\u7A7A\u95F4\uFF0C\u6240\u4EE5\u6211\u4EEC\u8981\u6C42\u7684\u5176\u5B9E\u5C31\u662F\u6700\u591A\u6709\u51E0\u4E2A\u4E0D\u91CD\u53E0\u7684\u7A7A\u95F4\u3002</p><p>\u6765\u770B\u4E00\u4E0B\u8FD9\u5F20\u56FE</p><p>\u4F46\u662F\u8FD9\u4E2A\u9898\u91CC\u7684\u63CF\u8FF0, \u8FB9\u754C\u91CD\u53E0\u540E, \u7BAD\u5934\u662F\u53EF\u4EE5\u4E00\u8D77\u5C04\u7206\u7684, \u6240\u4EE5\u4E24\u4E2A\u533A\u95F4\u7684\u8FB9\u754C\u91CD\u53E0\u4E5F\u7B97\u662F\u533A\u95F4\u91CD\u53E0\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">findMinArrowShots</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">points</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>points<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">//\u8D2A\u5FC3\u6CD5, \u6BCF\u4E2A\u6C14\u7403\u53EA\u5C11\u9700\u8981\u4E00\u652F\u7BAD, \u5148\u6309\u7167\u53F3\u7AEF\u70B9\u6392\u5E8F, \u7136\u540E\u6BCF\u6B21\u4ECE\u6700\u5C0F\u7684\u53F3\u7AEF\u70B9\u5C04\u51FA\u4E00\u652F\u7BAD, \u53BB\u6389\u88AB\u5C04\u7206\u7684\u6C14\u7403, \u91CD\u590D\u8BE5\u8FC7\u7A0B.</span>
  points<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> b<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> xEnd <span class="token operator">=</span> points<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> val <span class="token keyword">of</span> points<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>val<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> xEnd<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u4E0D\u6328\u7740\uFF0C\u6CE8\u610F\u8FD9\u91CC\u4E0D\u662F&gt;=</span>
      count<span class="token operator">++</span><span class="token punctuation">;</span>
      xEnd <span class="token operator">=</span> val<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> count<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u56DE\u6EAF\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u56DE\u6EAF\u7B97\u6CD5" aria-hidden="true">#</a> \u56DE\u6EAF\u7B97\u6CD5</h2><ul><li>\u56DE\u6EAF\u7B97\u6CD5\u662F\u4E00\u79CD\u6E10\u8FDB\u5F0F\u5BFB\u627E\u5E76\u6784\u5EFA\u95EE\u9898\u89E3\u51B3\u65B9\u5F0F\u7684\u7B56\u7565</li><li>\u56DE\u6EAF\u7B97\u6CD5\u4F1A\u5148\u4ECE\u4E00\u4E2A\u53EF\u80FD\u7684\u52A8\u4F5C\u5F00\u59CB\u89E3\u51B3\u95EE\u9898\uFF0C\u5982\u679C\u4E0D\u884C\uFF0C\u5C31\u56DE\u6EAF\u5E76\u9009\u62E9\u53E6\u4E00\u4E2A\u52A8\u4F5C\uFF0C\u76F4\u5230\u5C06\u95EE\u9898\u89E3\u51B3</li></ul><h3 id="\u573A\u666F-2" tabindex="-1"><a class="header-anchor" href="#\u573A\u666F-2" aria-hidden="true">#</a> \u573A\u666F</h3><ul><li>\u6709\u5F88\u591A\u8DEF\u3002\u8FD9\u4E9B\u8DEF\u91CC\uFF0C\u6709\u6B7B\u8DEF\uFF0C\u4E5F\u6709\u51FA\u8DEF\uFF0C\u901A\u5E38\u9012\u5F52\u6A21\u62DF\u6240\u6709\u8DEF</li><li>\u5168\u6392\u5217 <ul><li>\u9012\u5F52\u6A21\u62DF\u6240\u6709\u60C5\u51B5</li><li>\u9047\u5230\u5305\u542B\u91CD\u590D\u5143\u7D20\uFF0C\u5C31\u56DE\u6EAF</li><li>\u6536\u96C6\u6240\u6709\u5230\u8FBE\u9012\u5F52\u91CD\u70B9\u7684\u60C5\u51B5\uFF0C\u5E76\u8FD4\u56DE</li></ul></li></ul><h3 id="_46-\u5168\u6392\u5217" tabindex="-1"><a class="header-anchor" href="#_46-\u5168\u6392\u5217" aria-hidden="true">#</a> 46.\u5168\u6392\u5217</h3><ul><li>\u65F6\u95F4\u590D\u6742\u5EA6 O(n!)</li><li>\u7A7A\u95F4\u590D\u6742\u5EA6 O(n)</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">permute</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">nums</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">const</span> <span class="token function-variable function">backtrack</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">path</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>path<span class="token punctuation">.</span>length <span class="token operator">===</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>
            <span class="token keyword">return</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// for (let i = 0; i &lt; nums.length; i++) {</span>
        <span class="token comment">//     // console.log(nums[i])</span>
        <span class="token comment">//     if (path.includes(nums[i])) return</span>
        <span class="token comment">//     backtrack(path.concat(nums[i]))</span>
        <span class="token comment">// }</span>
        nums<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span>
            <span class="token function">backtrack</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token function">backtrack</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> res
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_78-\u5B50\u96C6" tabindex="-1"><a class="header-anchor" href="#_78-\u5B50\u96C6" aria-hidden="true">#</a> 78.\u5B50\u96C6</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="\u641C\u7D22\u7B97\u6CD5-\u9012\u5F52\u6216\u8005\u6808\u89E3\u51B3" tabindex="-1"><a class="header-anchor" href="#\u641C\u7D22\u7B97\u6CD5-\u9012\u5F52\u6216\u8005\u6808\u89E3\u51B3" aria-hidden="true">#</a> \u641C\u7D22\u7B97\u6CD5(\u9012\u5F52\u6216\u8005\u6808\u89E3\u51B3)</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">dfs</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">shot</span><span class="token punctuation">(</span>xx<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> xxx<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">judge</span><span class="token punctuation">(</span>xxx<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u9012\u5F52</span>
    <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">bfs</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>queue<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> point <span class="token operator">=</span> queue<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>\u53EF\u8FBE <span class="token keyword">in</span> point<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>point<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">shot</span><span class="token punctuation">(</span>\u53EF\u8FBE<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> \u53EF\u8FBE<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u53CC\u6307\u9488" tabindex="-1"><a class="header-anchor" href="#\u53CC\u6307\u9488" aria-hidden="true">#</a> \u53CC\u6307\u9488</h2><h3 id="_977-\u6709\u5E8F\u6570\u7EC4\u7684\u5E73\u65B9" tabindex="-1"><a class="header-anchor" href="#_977-\u6709\u5E8F\u6570\u7EC4\u7684\u5E73\u65B9" aria-hidden="true">#</a> 977. \u6709\u5E8F\u6570\u7EC4\u7684\u5E73\u65B9</h3><h4 id="\u66B4\u529B\u7834\u89E3" tabindex="-1"><a class="header-anchor" href="#\u66B4\u529B\u7834\u89E3" aria-hidden="true">#</a> \u66B4\u529B\u7834\u89E3</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">sortedSquares</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">nums</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> nums<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token operator">=&gt;</span>num<span class="token operator">*</span>num<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span>b</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span>a<span class="token operator">-</span>b<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u53CC\u6307\u9488-1" tabindex="-1"><a class="header-anchor" href="#\u53CC\u6307\u9488-1" aria-hidden="true">#</a> \u53CC\u6307\u9488</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">sortedSquares</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">nums</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> ans <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>nums<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
    <span class="token keyword">let</span> left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> right <span class="token operator">=</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> f <span class="token operator">=</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span>

    <span class="token keyword">while</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;=</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">*</span> nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">&gt;</span> nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span> <span class="token operator">*</span> nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            ans<span class="token punctuation">[</span>f<span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">*</span> nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span>
            left<span class="token operator">++</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            ans<span class="token punctuation">[</span>f<span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span> <span class="token operator">*</span> nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span>
            right<span class="token operator">--</span>
        <span class="token punctuation">}</span>
        f<span class="token operator">--</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> ans

<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_189-\u8F6E\u8F6C\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#_189-\u8F6E\u8F6C\u6570\u7EC4" aria-hidden="true">#</a> 189. \u8F6E\u8F6C\u6570\u7EC4</h3><h4 id="\u50BB\u74DC\u89E3\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u50BB\u74DC\u89E3\u6CD5" aria-hidden="true">#</a> \u50BB\u74DC\u89E3\u6CD5</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">rotate</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">nums<span class="token punctuation">,</span> k</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> n<span class="token operator">=</span>nums<span class="token punctuation">.</span>length
    <span class="token keyword">let</span> newArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        newArr<span class="token punctuation">[</span><span class="token punctuation">(</span>i<span class="token operator">+</span>k<span class="token punctuation">)</span><span class="token operator">%</span>n<span class="token punctuation">]</span><span class="token operator">=</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>newArr<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_283-\u79FB\u52A8\u96F6" tabindex="-1"><a class="header-anchor" href="#_283-\u79FB\u52A8\u96F6" aria-hidden="true">#</a> 283. \u79FB\u52A8\u96F6</h3><h4 id="\u66B4\u529B\u7834\u89E3-\u5DE7\u5999\u5229\u7528\u53D8\u91CF" tabindex="-1"><a class="header-anchor" href="#\u66B4\u529B\u7834\u89E3-\u5DE7\u5999\u5229\u7528\u53D8\u91CF" aria-hidden="true">#</a> \u66B4\u529B\u7834\u89E3\uFF08\u5DE7\u5999\u5229\u7528\u53D8\u91CF\uFF09</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">nums</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">void</span><span class="token punctuation">}</span></span> Do not return anything, modify nums in-place instead.
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">moveZeroes</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">nums</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u601D\u8DEF\uFF1A\u65B0\u5EFA\u4E00\u4E2A\u6570\u7EC4\uFF0C\u904D\u5386\u539F\u6570\u7EC4\uFF0C</span>
    <span class="token comment">//\u5982\u679C\u4E0D\u662F0 \u5C31\u7ED9\u65B0\u6570\u7EC4push\u8FDB\u53BB</span>
    <span class="token comment">//\u904D\u5386\u7ED3\u675F\u4E4B\u540E\uFF0C\u518D\u6B21\u904D\u5386\u539F\u6570\u7EC4\uFF0C\u76F4\u63A5\u8D4B\u503C\uFF0C\u5982\u679C\u6CA1\u6709\u503C \u5C31\u53D60</span>
    <span class="token keyword">var</span> newArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            newArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>newArr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">||</span><span class="token number">0</span>
    <span class="token punctuation">}</span>
    <span class="token doc-comment comment">/**
        \u53E6\u4E00\u79CD\u9A9A\u64CD\u4F5C\uFF1A\u53EA\u9700\u8981\u65B0\u5EFA\u4E00\u4E2A\u53D8\u91CFj\uFF0C\u7701\u7A7A\u95F4\u3002
        1. \u5FAA\u73AF\u904D\u5386\u6570\u7EC4\uFF0C\u5982\u679C\u6570\u7EC4\u5143\u7D20\u4E0D\u662F0\uFF0C\u5C31\u7ED9j\u5148\u8D4B\u503C\u540E\u518D++\uFF08\u6240\u4EE5\u662F\u540E++\uFF09
        2. \u904D\u5386\u7ED3\u675F\u4E4B\u540E\uFF0Cj\u8868\u793A\u5F53\u524D\u6570\u7EC4\u975E0\u7684\u4E2A\u6570\uFF0Cwhile\u5FAA\u73AF\uFF0Cj\u540E++\u8D4B\u503C\u5269\u4E0B\u7684\u503C\u4E3A0
     */</span>

    <span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
           nums<span class="token punctuation">[</span>j<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>j<span class="token operator">&lt;</span>nums<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span>
        nums<span class="token punctuation">[</span>j<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u53CC\u6307\u9488-2" tabindex="-1"><a class="header-anchor" href="#\u53CC\u6307\u9488-2" aria-hidden="true">#</a> \u53CC\u6307\u9488</h4><p>\u4E24\u4E2A\u6307\u9488\u90FD\u4ECE\u5DE6\u4FA7\u51FA\u53D1\uFF0C \uFF0C\u5DE6\u6307\u9488\u6307\u5411\u5F53\u524D\u5DF2\u7ECF\u5904\u7406\u597D\u7684\u5E8F\u5217\u7684\u5C3E\u90E8\uFF0C\u53F3\u6307\u9488\u6307\u5411\u5F85\u5904\u7406\u5E8F\u5217\u7684\u5934\u90E8\u3002</p><p>\u53F3\u6307\u9488\u4E0D\u65AD\u5411\u53F3\u79FB\u52A8\uFF0C\u6BCF\u6B21\u53F3\u6307\u9488\u6307\u5411\u975E\u96F6\u6570\uFF0C\u5219\u5C06\u5DE6\u53F3\u6307\u9488\u5BF9\u5E94\u7684\u6570\u4EA4\u6362\uFF0C\u540C\u65F6\u5DE6\u6307\u9488\u53F3\u79FB\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">moveZeroes</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">nums</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> len <span class="token operator">=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">,</span>left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>right <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>right <span class="token operator">&lt;</span> len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//\u975E\u96F6\u6570</span>
            <span class="token punctuation">[</span>nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">,</span> nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">,</span> nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">]</span>
            left<span class="token operator">++</span>
        <span class="token punctuation">}</span>
        right<span class="token operator">++</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_344-\u53CD\u8F6C\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#_344-\u53CD\u8F6C\u5B57\u7B26\u4E32" aria-hidden="true">#</a> 344. \u53CD\u8F6C\u5B57\u7B26\u4E32</h3><p>\u56F0\u96BE\u9898\u6211\u552F\u552F\u8BFA\u8BFA\uFF0C\u7B80\u5355\u9898\u6211\u91CD\u62F3\u51FA\u51FB</p><p>\u601D\u8DEF\uFF1A</p><p>\u5F53 left &lt; right\uFF1A\u4EA4\u6362 s[left] \u548C s[right]\uFF1Bleft \u6307\u9488\u53F3\u79FB\u4E00\u4F4D\uFF0C\u5373 left = left + 1\uFF1B right \u6307\u9488\u5DE6\u79FB\u4E00\u4F4D\uFF0C\u5373 right = right - 1\u3002</p><p>\u5F53 left &gt;= right\uFF0C\u53CD\u8F6C\u7ED3\u675F\uFF0C\u8FD4\u56DE\u5B57\u7B26\u6570\u7EC4\u5373\u53EF\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">reverseString</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> right <span class="token operator">=</span> s<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">[</span>s<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">,</span> s<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>s<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">,</span> s<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">]</span>
        left<span class="token operator">++</span><span class="token punctuation">;</span>
        right<span class="token operator">--</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u53CD\u8F6C" tabindex="-1"><a class="header-anchor" href="#\u53CD\u8F6C" aria-hidden="true">#</a> \u53CD\u8F6C</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">s</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">reverseWords</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
   <span class="token keyword">const</span> nums <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>         <span class="token comment">//\u5B9A\u4E49\u65B0\u7684\u6570\u7EC4\u7528\u6765\u5B58\u653E\u5B57\u7B26\u4E32</span>
   <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
   <span class="token keyword">while</span><span class="token punctuation">(</span>i <span class="token operator">&lt;</span> s<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span>
       <span class="token keyword">let</span> start <span class="token operator">=</span> i<span class="token punctuation">;</span>   
        <span class="token keyword">while</span><span class="token punctuation">(</span>i <span class="token operator">&lt;</span> s<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token string">&#39; &#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token comment">//\u904D\u5386\u4E00\u6BB5\u5B57\u7B26\u4E32\uFF0C\u67E5\u51FA\u8FD9\u4E2A\u5355\u8BCD\u7684\u957F\u5EA6</span>
           i<span class="token operator">++</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span>
       <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> p <span class="token operator">=</span> start<span class="token punctuation">;</span>p <span class="token operator">&lt;</span> i<span class="token punctuation">;</span>p<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token comment">// \u5FAA\u73AF\u5C06\u5B57\u7B26\u4E32\u5012\u5E8F\u5B58\u5165\u6570\u7EC4\u5F53\u4E2D</span>
           nums<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>start <span class="token operator">+</span> i <span class="token operator">-</span> p <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span>
       <span class="token keyword">while</span><span class="token punctuation">(</span>i <span class="token operator">&lt;</span> s<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">&#39; &#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>       <span class="token comment">//\u5728\u5012\u5E8F\u4E4B\u540E\u7684\u6570\u7EC4\u4E2D\u52A0\u4E0A\u4E00\u4E2A\u7A7A\u683C\u5B57\u7B26\u4E32</span>
           nums<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           i<span class="token operator">++</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>
    <span class="token keyword">return</span> nums<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token comment">//\u5C06\u6570\u7EC4\u8FDE\u63A5\u6210\u4E3A\u4E00\u4E2A\u5B57\u7B26\u4E32</span>

<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>\u7B2C\u4E00\u6B21\u8FDB\u5165 i &lt; s.length \u5FAA\u73AF
		i = 0
		start = 0
		\u7B2C\u4E00\u4E2A while \u5FAA\u73AF\u4E4B\u540E            //  \u904D\u5386\u4E00\u6BB5\u5B57\u7B26\u4E32\uFF0C\u67E5\u51FA\u8FD9\u4E2A\u5355\u8BCD\u7684\u957F\u5EA6
		i = 5
		\u8FDB\u5165for\u5FAA\u73AF                       // \u5FAA\u73AF\u5C06\u5B57\u7B26\u4E32\u5012\u5E8F\u5B58\u5165\u6570\u7EC4\u5F53\u4E2D
		p = start = 0    p &lt; i ( 5 )    p++
		\u6B64\u65F6\u7684nums\u6570\u7EC4\u662F[&quot;s&quot;,&quot;&#39;&quot;,&quot;t&quot;,&quot;e&quot;,&quot;L&quot;]
		\u8FDB\u5165\u7B2C\u4E8C\u4E2Awhile\u5FAA\u73AF\u4E2D              //\u7ED9nums\u6570\u7EC4\u540E\u52A0\u4E0A\u4E86\u4E00\u4E2A\u7A7A\u683C\u5B57\u7B26\u4E32
		\u6B64\u65F6nums\u4E3A [&quot;s&quot;,&quot;&#39;&quot;,&quot;t&quot;,&quot;e&quot;,&quot;L&quot;,&quot; &quot;]
        i = 6

\u7B2C\u4E8C\u6B21\u8FDB\u5165 i &lt; s.length \u5FAA\u73AF
        i = 6
		start = 6
		\u7B2C\u4E00\u4E2A while \u5FAA\u73AF\u4E4B\u540E            //  \u904D\u5386\u4E00\u6BB5\u5B57\u7B26\u4E32\uFF0C\u67E5\u51FA\u8FD9\u4E2A\u5355\u8BCD\u7684\u957F\u5EA6
		i = 10
		\u8FDB\u5165for\u5FAA\u73AF                       // \u5FAA\u73AF\u5C06\u5B57\u7B26\u4E32\u5012\u5E8F\u5B58\u5165\u6570\u7EC4\u5F53\u4E2D
		p = start = 6    p &lt; i ( 10 )    p++
		\u6B64\u65F6\u7684nums\u6570\u7EC4\u662F[&quot;s&quot;,&quot;&#39;&quot;,&quot;t&quot;,&quot;e&quot;,&quot;L&quot;,&quot; &quot;,&quot;e&quot;,&quot;k&quot;,&quot;a&quot;,&quot;t&quot;]
		\u8FDB\u5165\u7B2C\u4E8C\u4E2Awhile\u5FAA\u73AF\u4E2D              //\u7ED9nums\u6570\u7EC4\u540E\u52A0\u4E0A\u4E86\u4E00\u4E2A\u7A7A\u683C\u5B57\u7B26\u4E32
		\u6B64\u65F6nums\u4E3A [&quot;s&quot;,&quot;&#39;&quot;,&quot;t&quot;,&quot;e&quot;,&quot;L&quot;,&quot; &quot;,&quot;e&quot;,&quot;k&quot;,&quot;a&quot;,&quot;t&quot;,&quot; &quot;]
        \u6B64\u65F6 i= 10



**\u5BF9\u4E8E\u4E3A\u4EC0\u4E48for\u5FAA\u73AF\u5185\u5B58\u5165\u5B57\u7B26\u4E32\u7684\u65F6\u5019\u8868\u8FBE\u5F0F\u4E3Astart + i - p - 1
</code></pre><p>\u5F53\u8FDB\u5165\u5230\u7B2C\u4E8C\u6B21\u5FAA\u73AF\u65F6\uFF0Ci- p - 1 = 3 \u6240\u4EE5\u8981\u52A0\u4E0A\u524D\u9762\u5DF2\u7ECF\u5360\u7528\u7684\u4F4D\u7F6E 6 \u6B64\u65F6\u624D\u662F\u4ECE\u4E0B\u6807\u4E3A 9 \u65F6\u5F00\u59CB\u5B58\u5165\u5B57\u7B26\u4E32</p><p>\u6700\u540E\u7684join\uFF08\uFF09 \u4F5C\u7528\u662F:\u5C06\u6570\u7EC4\u8FDE\u63A5\u6210\u4E3A\u4E00\u4E2A\u5B57\u7B26\u4E32**</p>`,179);function f(y,g){const p=e("ExternalLinkIcon");return o(),c("div",null,[u,r,k,d,v,m,n("p",null,[n("a",b,[h,l(p)])]),w])}var j=t(i,[["render",f],["__file","index.html.vue"]]);export{j as default};
