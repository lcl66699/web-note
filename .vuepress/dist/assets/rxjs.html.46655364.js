import{_ as t,r as e,o,c,b as n,e as p,d as s,a as l}from"./app.c45603b7.js";const u={},i=n("h1",{id:"rxjs-\u5F02\u6B65\u6570\u636E\u6D41\u7F16\u7A0B",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#rxjs-\u5F02\u6B65\u6570\u636E\u6D41\u7F16\u7A0B","aria-hidden":"true"},"#"),s(" Rxjs \u5F02\u6B65\u6570\u636E\u6D41\u7F16\u7A0B")],-1),r=n("h3",{id:"rxjs-\u4ECB\u7ECD",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#rxjs-\u4ECB\u7ECD","aria-hidden":"true"},"#"),s(" Rxjs \u4ECB\u7ECD")],-1),k={href:"https://www.npmjs.com/package/rxjs",target:"_blank",rel:"noopener noreferrer"},d=s("\u53C2\u8003\u624B\u518C"),v={href:"https://cn.rx.js.org/",target:"_blank",rel:"noopener noreferrer"},m=s("\u4E2D\u6587\u624B\u518C"),b=l(`<p>RxJS \u662F ReactiveX \u7F16\u7A0B\u7406\u5FF5\u7684 JavaScript \u7248\u672C\u3002ReactiveX \u6765\u81EA\u5FAE\u8F6F\uFF0C\u5B83\u662F\u4E00\u79CD\u9488\u5BF9\u5F02\u6B65\u6570\u636E\u6D41\u7684\u7F16\u7A0B\u3002\u7B80\u5355\u6765\u8BF4\uFF0C\u5B83\u5C06\u4E00\u5207\u6570\u636E\uFF0C\u5305\u62EC HTTP \u8BF7\u6C42\uFF0CDOM \u4E8B\u4EF6\u6216\u8005\u666E\u901A\u6570\u636E\u7B49\u5305\u88C5\u6210\u6D41 \u7684\u5F62\u5F0F\uFF0C\u7136\u540E\u7528\u5F3A\u5927\u4E30\u5BCC\u7684\u64CD\u4F5C\u7B26\u5BF9\u6D41\u8FDB\u884C\u5904\u7406\uFF0C\u4F7F\u4F60\u80FD\u4EE5\u540C\u6B65\u7F16\u7A0B\u7684\u65B9\u5F0F\u5904\u7406\u5F02\u6B65\u6570\u636E\uFF0C \u5E76\u7EC4\u5408\u4E0D\u540C\u7684\u64CD\u4F5C\u7B26\u6765\u8F7B\u677E\u4F18\u96C5\u7684\u5B9E\u73B0\u4F60\u6240\u9700\u8981\u7684\u529F\u80FD\u3002</p><p>RxJS \u662F\u4E00\u79CD\u9488\u5BF9\u5F02\u6B65\u6570\u636E\u6D41\u7F16\u7A0B\u5DE5\u5177\uFF0C\u6216\u8005\u53EB\u54CD\u5E94\u5F0F\u6269\u5C55\u7F16\u7A0B\uFF1B\u53EF\u4E0D\u7BA1\u5982\u4F55\u89E3\u91CA RxJS \u5176\u76EE \u6807\u5C31\u662F\u5F02\u6B65\u7F16\u7A0B\uFF0CAngular \u5F15\u5165 RxJS \u4E3A\u4E86\u5C31\u662F\u8BA9\u5F02\u6B65\u53EF\u63A7\u3001\u66F4\u7B80\u5355\u3002</p><p>RxJS \u91CC\u9762\u63D0\u4F9B\u4E86\u5F88\u591A\u6A21\u5757\u3002\u8FD9\u91CC\u6211\u4EEC\u4E3B\u8981\u7ED9\u5927\u5BB6\u8BB2 RxJS \u91CC\u9762\u6700\u5E38\u7528\u7684 Observable \u548C fromEvent\u3002</p><p>\u76EE\u524D\u5E38\u89C1\u7684\u5F02\u6B65\u7F16\u7A0B\u7684\u51E0\u79CD\u65B9\u6CD5\uFF1A</p><ol><li>\u56DE\u8C03\u51FD\u6570</li><li>\u4E8B\u4EF6\u76D1\u542C/\u53D1\u5E03\u8BA2\u9605</li><li>Promise \u662F ES6</li><li>async/await \u662F ES7</li><li>Rxjs \u662F\u4E00\u4E2A js \u5E93</li></ol><h3 id="promise-\u548C-rxjs-\u5904\u7406\u5F02\u6B65\u5BF9\u6BD4" tabindex="-1"><a class="header-anchor" href="#promise-\u548C-rxjs-\u5904\u7406\u5F02\u6B65\u5BF9\u6BD4" aria-hidden="true">#</a> Promise \u548C RxJS \u5904\u7406\u5F02\u6B65\u5BF9\u6BD4</h3><p>Promise \u5904\u7406\u5F02\u6B65:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;---promisetimeout---&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">value</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>RxJS \u5904\u7406\u5F02\u6B65\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Observable <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;rxjs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> stream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Observable</span><span class="token punctuation">(</span><span class="token parameter">observer</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    observer<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token string">&quot;observabletimeout&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

stream<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token parameter">value</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4ECE\u4E0A\u9762\u5217\u5B50\u53EF\u4EE5\u770B\u5230 RxJS \u548C Promise \u7684\u57FA\u672C\u7528\u6CD5\u975E\u5E38\u7C7B\u4F3C\uFF0C\u9664\u4E86\u4E00\u4E9B\u5173\u952E\u8BCD\u4E0D\u540C\u3002 Promise \u91CC\u9762\u7528\u7684\u662F then() \u548C resolve()\uFF0C\u800C RxJS \u91CC\u9762\u7528\u7684\u662F next() \u548C subscribe()\u3002</p><p>\u4ECE\u4E0A\u9762\u4F8B\u5B50\u6211\u4EEC\u611F\u89C9 Promise \u548C RxJS \u7684\u7528\u6CD5\u57FA\u672C\u76F8\u4F3C\u3002\u5176\u5B9E Rxjs \u76F8\u6BD4 Promise \u8981\u5F3A\u5927\u5F88\u591A\u3002 \u6BD4\u5982 Rxjs \u4E2D\u53EF\u4EE5\u4E2D\u9014\u64A4\u56DE\u3001Rxjs \u53EF\u4EE5\u53D1\u5C04\u591A\u4E2A\u503C\u3001Rxjs \u63D0\u4F9B\u4E86\u591A\u79CD\u5DE5\u5177\u51FD\u6570\u7B49\u7B49\u3002</p><h3 id="rxjs-unsubscribe-\u53D6\u6D88\u8BA2\u9605" tabindex="-1"><a class="header-anchor" href="#rxjs-unsubscribe-\u53D6\u6D88\u8BA2\u9605" aria-hidden="true">#</a> Rxjs unsubscribe \u53D6\u6D88\u8BA2\u9605</h3><p>Promise \u7684\u521B\u5EFA\u4E4B\u540E\uFF0C\u52A8\u4F5C\u662F\u65E0\u6CD5\u64A4\u56DE\u7684\u3002Observable \u4E0D\u4E00\u6837\uFF0C\u52A8\u4F5C\u53EF\u4EE5\u901A\u8FC7 unsbscribe() \u65B9\u6CD5\u4E2D\u9014\u64A4\u56DE\uFF0C\u800C\u4E14 Observable \u5728\u5185\u90E8\u505A\u4E86\u667A\u80FD\u7684\u5904\u7406.</p><p>Promise \u521B\u5EFA\u4E4B\u540E\u52A8\u4F5C\u65E0\u6CD5\u64A4\u56DE</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;---promisetimeout---&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">value</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Rxjs \u53EF\u4EE5\u901A\u8FC7 unsubscribe() \u53EF\u4EE5\u64A4\u56DE subscribe \u7684\u52A8\u4F5C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> stream <span class="token operator">=</span> <span class="token function">newObservable</span><span class="token punctuation">(</span><span class="token parameter">observer</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> timeout <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timeout<span class="token punctuation">)</span><span class="token punctuation">;</span>
    observer<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token string">&quot;observabletimeout&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> disposable <span class="token operator">=</span> stream<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token parameter">value</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">//\u53D6\u6D88\u6267\u884C</span>
  disposable<span class="token punctuation">.</span><span class="token function">unsubscribe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="rxjs-\u8BA2\u9605\u540E\u591A\u6B21\u6267\u884C" tabindex="-1"><a class="header-anchor" href="#rxjs-\u8BA2\u9605\u540E\u591A\u6B21\u6267\u884C" aria-hidden="true">#</a> Rxjs \u8BA2\u9605\u540E\u591A\u6B21\u6267\u884C</h3><p>\u5982\u679C\u6211\u4EEC\u60F3\u8BA9\u5F02\u6B65\u91CC\u9762\u7684\u65B9\u6CD5\u591A\u6B21\u6267\u884C\uFF0C\u6BD4\u5982\u4E0B\u9762\u4EE3\u7801\u3002</p><p>\u8FD9\u4E00\u70B9 Promise \u662F\u505A\u4E0D\u5230\u7684\uFF0C\u5BF9\u4E8E Promise \u6765\u8BF4\uFF0C\u6700\u7EC8\u7ED3\u679C\u8981\u4E48 resolve\uFF08\u5151\u73B0\uFF09\u3001\u8981\u4E48 reject \uFF08\u62D2\u7EDD\uFF09\uFF0C\u800C\u4E14\u90FD\u53EA\u80FD\u89E6\u53D1\u4E00\u6B21\u3002\u5982\u679C\u5728\u540C\u4E00\u4E2A Promise \u5BF9\u8C61\u4E0A\u591A\u6B21\u8C03\u7528 resolve \u65B9\u6CD5\uFF0C \u5219\u4F1A\u629B\u5F02\u5E38\u3002\u800C Observable \u4E0D\u4E00\u6837\uFF0C\u5B83\u53EF\u4EE5\u4E0D\u65AD\u5730\u89E6\u53D1\u4E0B\u4E00\u4E2A\u503C\uFF0C\u5C31\u50CF next() \u8FD9\u4E2A\u65B9\u6CD5\u7684 \u540D\u5B57\u6240\u6697\u793A\u7684\u90A3\u6837\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;---promisesetInterval---&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">value</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Rxjs</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> stream <span class="token operator">=</span>
  <span class="token keyword">new</span> <span class="token class-name">Observable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span>
  number <span class="token operator">&gt;</span>
  <span class="token punctuation">(</span><span class="token parameter">observer</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      observer<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span>count<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

stream<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token parameter">value</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Observable&gt;&quot;</span> <span class="token operator">+</span> value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="angualr6-x-\u4E4B\u524D\u4F7F\u7528-rxjs-\u7684\u5DE5\u5177\u51FD\u6570-map-filter" tabindex="-1"><a class="header-anchor" href="#angualr6-x-\u4E4B\u524D\u4F7F\u7528-rxjs-\u7684\u5DE5\u5177\u51FD\u6570-map-filter" aria-hidden="true">#</a> Angualr6.x \u4E4B\u524D\u4F7F\u7528 Rxjs \u7684\u5DE5\u5177\u51FD\u6570 map,filter</h3><p>\u6CE8\u610F\uFF1AAngular6 \u4EE5\u540E\u4F7F\u7528\u4EE5\u524D\u7684 rxjs \u65B9\u6CD5\uFF0C\u5FC5\u987B\u5B89\u88C5 rxjs-compat \u6A21\u5757\u624D\u53EF\u4EE5\u4F7F\u7528 map\u3001 filter \u65B9\u6CD5\u3002 angular6 \u540E\u5B98\u65B9\u4F7F\u7528\u7684\u662F RXJS6 \u7684\u65B0\u7279\u6027\uFF0C\u6240\u4EE5\u5B98\u65B9\u7ED9\u51FA\u4E86\u4E00\u4E2A\u53EF\u4EE5\u6682\u65F6\u5EF6\u7F13\u6211\u4EEC\u4E0D\u9700\u8981\u4FEE\u6539 rsjx \u4EE3\u7801\u7684\u529E\u6CD5\u3002</p><p><code>npm install rxjs-compat</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>Observable<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;rxjs&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string">&#39;rxjs/Rx&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> stream <span class="token operator">=</span>
  <span class="token keyword">new</span> <span class="token class-name">Observable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span>any<span class="token operator">&gt;</span>
  <span class="token punctuation">(</span><span class="token parameter">observer</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      observer<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span>count<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

stream
  <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">val</span> <span class="token operator">=&gt;</span> val <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token parameter">value</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;filter&gt;&quot;</span> <span class="token operator">+</span> value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
stream
  <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">value</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> value <span class="token operator">*</span> value<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token parameter">value</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;map&gt;&quot;</span> <span class="token operator">+</span> value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="angualr6-x-\u4EE5\u540E-rxjs6-x-\u7684\u53D8\u5316\u4EE5\u53CA\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#angualr6-x-\u4EE5\u540E-rxjs6-x-\u7684\u53D8\u5316\u4EE5\u53CA\u4F7F\u7528" aria-hidden="true">#</a> Angualr6.x \u4EE5\u540E Rxjs6.x \u7684\u53D8\u5316\u4EE5\u53CA\u4F7F\u7528</h3><p>RXJS6 \u6539\u53D8\u4E86\u5305\u7684\u7ED3\u6784\uFF0C\u4E3B\u8981\u53D8\u5316\u5728 import \u65B9\u5F0F\u548C operator \u4E0A\u9762\u4EE5\u53CA\u4F7F\u7528 pipe()</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>Observable<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;rxjs&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>map<span class="token punctuation">,</span>filter<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;rxjs/operators&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> stream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Observable</span><span class="token operator">&lt;</span>any<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token parameter">observer</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      observer<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span>count<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

stream
  <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">val</span> <span class="token operator">=&gt;</span> val <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token parameter">value</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;filter&gt;&quot;</span> <span class="token operator">+</span> value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

stream
  <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>
    <span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">val</span> <span class="token operator">=&gt;</span> val <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">value</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> value <span class="token operator">*</span> value<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token parameter">value</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;map&gt;&quot;</span> <span class="token operator">+</span> value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,32);function g(x,f){const a=e("ExternalLinkIcon");return o(),c("div",null,[i,r,n("p",null,[n("a",k,[d,p(a)])]),n("p",null,[n("a",v,[m,p(a)])]),b])}var h=t(u,[["render",g],["__file","rxjs.html.vue"]]);export{h as default};
